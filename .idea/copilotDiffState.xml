<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/LoginActivity.java" />
              <option name="originalContent" value="package ac.id.binus.labux;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.RelativeLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private EditText etUsername, etPassword;&#10;    private Button btnLogin;&#10;    private TextView tvForgotPassword;&#10;    private View btnGoogleLogin, btnAppleLogin, btnFacebookLogin;&#10;    private RelativeLayout forgotPasswordOverlay;&#10;    private ImageView btnCloseOverlay;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        // Hide action bar for full screen experience&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().hide();&#10;        }&#10;&#10;        initViews();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        etUsername = findViewById(R.id.et_username);&#10;        etPassword = findViewById(R.id.et_password);&#10;        btnLogin = findViewById(R.id.btn_login);&#10;        tvForgotPassword = findViewById(R.id.tv_forgot_password);&#10;        btnGoogleLogin = findViewById(R.id.btn_google_login);&#10;        btnAppleLogin = findViewById(R.id.btn_apple_login);&#10;        btnFacebookLogin = findViewById(R.id.btn_facebook_login);&#10;        forgotPasswordOverlay = findViewById(R.id.forgot_password_overlay);&#10;        btnCloseOverlay = findViewById(R.id.btn_close_overlay);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnLogin.setOnClickListener(v -&gt; handleLogin());&#10;        &#10;        tvForgotPassword.setOnClickListener(v -&gt; handleForgotPassword());&#10;        &#10;        btnGoogleLogin.setOnClickListener(v -&gt; handleGoogleLogin());&#10;        &#10;        btnAppleLogin.setOnClickListener(v -&gt; handleAppleLogin());&#10;        &#10;        btnFacebookLogin.setOnClickListener(v -&gt; handleFacebookLogin());&#10;        &#10;        // Close overlay listeners&#10;        btnCloseOverlay.setOnClickListener(v -&gt; hideForgotPasswordOverlay());&#10;        forgotPasswordOverlay.setOnClickListener(v -&gt; hideForgotPasswordOverlay());&#10;    }&#10;&#10;    private void handleLogin() {&#10;        String username = etUsername.getText().toString().trim();&#10;        String password = etPassword.getText().toString().trim();&#10;&#10;        if (TextUtils.isEmpty(username)) {&#10;            etUsername.setError(&quot;Username is required&quot;);&#10;            etUsername.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(password)) {&#10;            etPassword.setError(&quot;Password is required&quot;);&#10;            etPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // For now, simulate a successful login&#10;        // In a real app, you would validate credentials with your backend&#10;        if (username.equals(&quot;admin&quot;) &amp;&amp; password.equals(&quot;password&quot;)) {&#10;            Toast.makeText(this, &quot;Login Successful!&quot;, Toast.LENGTH_SHORT).show();&#10;            &#10;            // Navigate to MainActivity&#10;            Intent intent = new Intent(LoginActivity.this, MainActivity.class);&#10;            startActivity(intent);&#10;            finish();&#10;        } else {&#10;            Toast.makeText(this, &quot;Invalid username or password&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void handleForgotPassword() {&#10;        showForgotPasswordOverlay();&#10;    }&#10;    &#10;    private void showForgotPasswordOverlay() {&#10;        forgotPasswordOverlay.setVisibility(View.VISIBLE);&#10;    }&#10;    &#10;    private void hideForgotPasswordOverlay() {&#10;        forgotPasswordOverlay.setVisibility(View.GONE);&#10;    }&#10;&#10;    private void handleGoogleLogin() {&#10;        Toast.makeText(this, &quot;Google Login clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        // Implement Google OAuth login&#10;    }&#10;&#10;    private void handleAppleLogin() {&#10;        Toast.makeText(this, &quot;Apple Login clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        // Implement Apple login&#10;    }&#10;&#10;    private void handleFacebookLogin() {&#10;        Toast.makeText(this, &quot;Facebook Login clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        // Implement Facebook login&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ac.id.binus.labux;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.TextView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import ac.id.binus.labux.utils.UserSession;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private EditText etUsername, etPassword;&#10;    private Button btnLogin;&#10;    private TextView tvUsernameError, tvPasswordError;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        // Hide action bar for full screen experience&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().hide();&#10;        }&#10;&#10;        initViews();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        etUsername = findViewById(R.id.et_username);&#10;        etPassword = findViewById(R.id.et_password);&#10;        btnLogin = findViewById(R.id.btn_login);&#10;        tvUsernameError = findViewById(R.id.tv_username_error);&#10;        tvPasswordError = findViewById(R.id.tv_password_error);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnLogin.setOnClickListener(v -&gt; handleLogin());&#10;    }&#10;&#10;    private void handleLogin() {&#10;        // Clear previous error messages&#10;        hideErrorMessages();&#10;        &#10;        String username = etUsername.getText().toString().trim();&#10;        String password = etPassword.getText().toString().trim();&#10;        &#10;        boolean hasError = false;&#10;&#10;        // Validate username&#10;        if (username.isEmpty()) {&#10;            showUsernameError(&quot;Username must be filled in&quot;);&#10;            hasError = true;&#10;        } else if (username.length() &lt; 5 || username.length() &gt; 10) {&#10;            showUsernameError(&quot;Username must be 5-10 characters long&quot;);&#10;            hasError = true;&#10;        }&#10;&#10;        // Validate password&#10;        if (password.isEmpty()) {&#10;            showPasswordError(&quot;Password must not be empty&quot;);&#10;            hasError = true;&#10;        }&#10;&#10;        // If validation fails, return early&#10;        if (hasError) {&#10;            return;&#10;        }&#10;&#10;        // If validation passes, store username and navigate to MainActivity&#10;        UserSession.getInstance().setUsername(username);&#10;        &#10;        Intent intent = new Intent(LoginActivity.this, MainActivity.class);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    private void showUsernameError(String message) {&#10;        tvUsernameError.setText(message);&#10;        tvUsernameError.setVisibility(View.VISIBLE);&#10;    }&#10;&#10;    private void showPasswordError(String message) {&#10;        tvPasswordError.setText(message);&#10;        tvPasswordError.setVisibility(View.VISIBLE);&#10;    }&#10;&#10;    private void hideErrorMessages() {&#10;        tvUsernameError.setVisibility(View.GONE);&#10;        tvPasswordError.setVisibility(View.GONE);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/MainActivity.java" />
              <option name="originalContent" value="package ac.id.binus.labux;&#10;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.navigation.NavController;&#10;import androidx.navigation.Navigation;&#10;import androidx.navigation.ui.NavigationUI;&#10;&#10;import ac.id.binus.labux.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    private ActivityMainBinding binding;&#10;    private NavController navController;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Hide the action bar to remove &quot;HOME&quot; title&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().hide();&#10;        }&#10;&#10;        navController = Navigation.findNavController(this, R.id.nav_host_fragment_activity_main);&#10;        NavigationUI.setupWithNavController(binding.navView, navController);&#10;&#10;        setupCustomBottomNavigation();&#10;    }&#10;&#10;    private void setupCustomBottomNavigation() {&#10;        // Set home as selected by default&#10;        updateNavigationSelection(R.id.nav_home_btn);&#10;&#10;        // Home button click&#10;        binding.navHomeBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_home_btn);&#10;        });&#10;&#10;        // List button click (navigate to home for now)&#10;        binding.navListBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_list_btn);&#10;        });&#10;&#10;        // About button click (navigate to home for now)&#10;        binding.navAboutBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_about_btn);&#10;        });&#10;    }&#10;&#10;    private void updateNavigationSelection(int selectedId) {&#10;        // Reset all icons to secondary color&#10;        ImageView homeIcon = binding.navHomeBtn.findViewById(ImageView.class);&#10;        ImageView listIcon = binding.navListBtn.findViewById(ImageView.class);&#10;        ImageView aboutIcon = binding.navAboutBtn.findViewById(ImageView.class);&#10;&#10;        int secondaryColor = ContextCompat.getColor(this, R.color.text_secondary);&#10;        int selectedColor = ContextCompat.getColor(this, R.color.golden_yellow);&#10;&#10;        homeIcon.setColorFilter(secondaryColor);&#10;        listIcon.setColorFilter(secondaryColor);&#10;        aboutIcon.setColorFilter(secondaryColor);&#10;&#10;        // Set selected icon to golden yellow&#10;        if (selectedId == R.id.nav_home_btn) {&#10;            homeIcon.setColorFilter(selectedColor);&#10;        } else if (selectedId == R.id.nav_list_btn) {&#10;            listIcon.setColorFilter(selectedColor);&#10;        } else if (selectedId == R.id.nav_about_btn) {&#10;            aboutIcon.setColorFilter(selectedColor);&#10;        }&#10;    }&#10;&#10;}" />
              <option name="updatedContent" value="package ac.id.binus.labux;&#10;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.navigation.NavController;&#10;import androidx.navigation.Navigation;&#10;import androidx.navigation.ui.NavigationUI;&#10;&#10;import ac.id.binus.labux.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    private ActivityMainBinding binding;&#10;    private NavController navController;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Hide the action bar to remove &quot;HOME&quot; title&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().hide();&#10;        }&#10;&#10;        navController = Navigation.findNavController(this, R.id.nav_host_fragment_activity_main);&#10;        NavigationUI.setupWithNavController(binding.navView, navController);&#10;&#10;        setupCustomBottomNavigation();&#10;    }&#10;&#10;    private void setupCustomBottomNavigation() {&#10;        // Set home as selected by default&#10;        updateNavigationSelection(R.id.nav_home_btn);&#10;&#10;        // Home button click&#10;        binding.navHomeBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_home_btn);&#10;        });&#10;&#10;        // List button click (navigate to home for now)&#10;        binding.navListBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_list_btn);&#10;        });&#10;&#10;        // About button click (navigate to home for now)&#10;        binding.navAboutBtn.setOnClickListener(v -&gt; {&#10;            navController.navigate(R.id.navigation_home);&#10;            updateNavigationSelection(R.id.nav_about_btn);&#10;        });&#10;    }&#10;&#10;    private void updateNavigationSelection(int selectedId) {&#10;        // Reset all icons to secondary color by finding ImageView children&#10;        LinearLayout homeBtn = binding.navHomeBtn;&#10;        LinearLayout listBtn = binding.navListBtn;&#10;        LinearLayout aboutBtn = binding.navAboutBtn;&#10;&#10;        ImageView homeIcon = (ImageView) homeBtn.getChildAt(0);&#10;        ImageView listIcon = (ImageView) listBtn.getChildAt(0);&#10;        ImageView aboutIcon = (ImageView) aboutBtn.getChildAt(0);&#10;&#10;        int secondaryColor = ContextCompat.getColor(this, R.color.text_secondary);&#10;        int selectedColor = ContextCompat.getColor(this, R.color.golden_yellow);&#10;&#10;        homeIcon.setColorFilter(secondaryColor);&#10;        listIcon.setColorFilter(secondaryColor);&#10;        aboutIcon.setColorFilter(secondaryColor);&#10;&#10;        // Set selected icon to golden yellow&#10;        if (selectedId == R.id.nav_home_btn) {&#10;            homeIcon.setColorFilter(selectedColor);&#10;        } else if (selectedId == R.id.nav_list_btn) {&#10;            listIcon.setColorFilter(selectedColor);&#10;        } else if (selectedId == R.id.nav_about_btn) {&#10;            aboutIcon.setColorFilter(selectedColor);&#10;        }&#10;    }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/AnimeCarouselAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/AnimeCarouselAdapter.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import java.util.List;&#10;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.Anime;&#10;&#10;public class AnimeCarouselAdapter extends RecyclerView.Adapter&lt;AnimeCarouselAdapter.CarouselViewHolder&gt; {&#10;&#10;    private Context context;&#10;    private List&lt;Anime&gt; animeList;&#10;&#10;    public AnimeCarouselAdapter(Context context, List&lt;Anime&gt; animeList) {&#10;        this.context = context;&#10;        this.animeList = animeList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public CarouselViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_anime_carousel, parent, false);&#10;        return new CarouselViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull CarouselViewHolder holder, int position) {&#10;        Anime anime = animeList.get(position);&#10;        &#10;        // Set anime title and genre&#10;        holder.animeTitle.setText(anime.getTitle());&#10;        holder.animeGenre.setText(anime.getGenre());&#10;        &#10;        // Load anime image using wide image resource&#10;        int imageResId = context.getResources().getIdentifier(anime.getWideImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.animeImage.setImageResource(imageResId);&#10;        } else {&#10;            holder.animeImage.setImageResource(R.drawable.featured_anime);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return animeList.size();&#10;    }&#10;&#10;    public static class CarouselViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView animeImage;&#10;        TextView animeTitle;&#10;        TextView animeGenre;&#10;&#10;        public CarouselViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            animeImage = itemView.findViewById(R.id.carousel_image);&#10;            animeTitle = itemView.findViewById(R.id.carousel_title);&#10;            animeGenre = itemView.findViewById(R.id.carousel_genre);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/LatestReviewAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/LatestReviewAdapter.java" />
              <option name="originalContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.Review;&#10;&#10;public class LatestReviewAdapter extends RecyclerView.Adapter&lt;LatestReviewAdapter.ViewHolder&gt; {&#10;    private List&lt;Review&gt; reviewList;&#10;    private Context context;&#10;&#10;    public LatestReviewAdapter(Context context, List&lt;Review&gt; reviewList) {&#10;        this.context = context;&#10;        this.reviewList = reviewList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_latest_review, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Review review = reviewList.get(position);&#10;        holder.reviewTitle.setText(review.getTitle());&#10;        holder.reviewSubtitle.setText(review.getSubtitle());&#10;        holder.reviewDescription.setText(review.getDescription());&#10;&#10;        // Set rating stars&#10;        String stars = &quot;★&quot;.repeat(review.getRating()) + &quot;☆&quot;.repeat(5 - review.getRating());&#10;        holder.reviewRating.setText(stars);&#10;&#10;        // Set image using resource name (.jpeg files)&#10;        int imageResId = context.getResources().getIdentifier(review.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.reviewImage.setImageResource(imageResId);&#10;            // Use the same image for the logo for now&#10;            holder.reviewLogo.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return reviewList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView reviewImage;&#10;        ImageView reviewLogo; // New ImageView for the logo&#10;        TextView reviewTitle;&#10;        TextView reviewSubtitle;&#10;        TextView reviewDescription;&#10;        TextView reviewRating;&#10;        TextView replyButton;&#10;        TextView shareButton;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            reviewImage = itemView.findViewById(R.id.review_image);&#10;            reviewTitle = itemView.findViewById(R.id.review_title);&#10;            reviewSubtitle = itemView.findViewById(R.id.review_subtitle);&#10;            reviewDescription = itemView.findViewById(R.id.review_description);&#10;            reviewRating = itemView.findViewById(R.id.review_rating);&#10;            replyButton = itemView.findViewById(R.id.reply_button);&#10;            shareButton = itemView.findViewById(R.id.share_button);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.Review;&#10;&#10;public class LatestReviewAdapter extends RecyclerView.Adapter&lt;LatestReviewAdapter.ViewHolder&gt; {&#10;    private List&lt;Review&gt; reviewList;&#10;    private Context context;&#10;&#10;    public LatestReviewAdapter(Context context, List&lt;Review&gt; reviewList) {&#10;        this.context = context;&#10;        this.reviewList = reviewList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_latest_review, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Review review = reviewList.get(position);&#10;        holder.reviewTitle.setText(review.getTitle());&#10;        holder.reviewSubtitle.setText(review.getSubtitle());&#10;        holder.reviewDescription.setText(review.getDescription());&#10;&#10;        // Set rating stars&#10;        String stars = &quot;★&quot;.repeat(review.getRating()) + &quot;☆&quot;.repeat(5 - review.getRating());&#10;        holder.reviewRating.setText(stars);&#10;&#10;        // Set image using resource name (.jpeg files)&#10;        int imageResId = context.getResources().getIdentifier(review.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.reviewImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return reviewList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView reviewImage;&#10;        TextView reviewTitle;&#10;        TextView reviewSubtitle;&#10;        TextView reviewDescription;&#10;        TextView reviewRating;&#10;        TextView replyButton;&#10;        TextView shareButton;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            reviewImage = itemView.findViewById(R.id.review_image);&#10;            reviewTitle = itemView.findViewById(R.id.review_title);&#10;            reviewSubtitle = itemView.findViewById(R.id.review_subtitle);&#10;            reviewDescription = itemView.findViewById(R.id.review_description);&#10;            reviewRating = itemView.findViewById(R.id.review_rating);&#10;            replyButton = itemView.findViewById(R.id.reply_button);&#10;            shareButton = itemView.findViewById(R.id.share_button);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/MangaReleaseAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/MangaReleaseAdapter.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.MangaRelease;&#10;&#10;public class MangaReleaseAdapter extends RecyclerView.Adapter&lt;MangaReleaseAdapter.ViewHolder&gt; {&#10;    private List&lt;MangaRelease&gt; mangaReleaseList;&#10;    private Context context;&#10;&#10;    public MangaReleaseAdapter(Context context, List&lt;MangaRelease&gt; mangaReleaseList) {&#10;        this.context = context;&#10;        this.mangaReleaseList = mangaReleaseList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_manga_release, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        MangaRelease mangaRelease = mangaReleaseList.get(position);&#10;        holder.mangaTitle.setText(mangaRelease.getTitle());&#10;        holder.description.setText(mangaRelease.getDescription());&#10;        holder.chapter.setText(mangaRelease.getChapter());&#10;        &#10;        // Set image using resource name (.jpeg files)&#10;        int imageResId = context.getResources().getIdentifier(mangaRelease.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.mangaImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return mangaReleaseList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView mangaImage;&#10;        TextView mangaTitle;&#10;        TextView description;&#10;        TextView chapter;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            mangaImage = itemView.findViewById(R.id.manga_image);&#10;            mangaTitle = itemView.findViewById(R.id.manga_title);&#10;            description = itemView.findViewById(R.id.description);&#10;            chapter = itemView.findViewById(R.id.chapter);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/MangaUpdateAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/MangaUpdateAdapter.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.MangaUpdate;&#10;&#10;public class MangaUpdateAdapter extends RecyclerView.Adapter&lt;MangaUpdateAdapter.ViewHolder&gt; {&#10;    private List&lt;MangaUpdate&gt; mangaUpdateList;&#10;    private Context context;&#10;&#10;    public MangaUpdateAdapter(Context context, List&lt;MangaUpdate&gt; mangaUpdateList) {&#10;        this.context = context;&#10;        this.mangaUpdateList = mangaUpdateList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_manga_update, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        MangaUpdate mangaUpdate = mangaUpdateList.get(position);&#10;        holder.mangaTitle.setText(mangaUpdate.getTitle());&#10;        holder.updateDate.setText(mangaUpdate.getUpdateDate());&#10;        holder.status.setText(mangaUpdate.getStatus());&#10;        &#10;        // Set image using resource name (.jpeg files)&#10;        int imageResId = context.getResources().getIdentifier(mangaUpdate.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.mangaImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return mangaUpdateList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView mangaImage;&#10;        TextView mangaTitle;&#10;        TextView updateDate;&#10;        TextView status;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            mangaImage = itemView.findViewById(R.id.manga_image);&#10;            mangaTitle = itemView.findViewById(R.id.manga_title);&#10;            updateDate = itemView.findViewById(R.id.update_date);&#10;            status = itemView.findViewById(R.id.status);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/RecentNewsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/RecentNewsAdapter.java" />
              <option name="originalContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.News;&#10;&#10;public class RecentNewsAdapter extends RecyclerView.Adapter&lt;RecentNewsAdapter.ViewHolder&gt; {&#10;    private List&lt;News&gt; newsList;&#10;    private Context context;&#10;&#10;    public RecentNewsAdapter(Context context, List&lt;News&gt; newsList) {&#10;        this.context = context;&#10;        this.newsList = newsList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_recent_news, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        News news = newsList.get(position);&#10;        holder.newsTitle.setText(news.getTitle());&#10;        holder.newsDescription.setText(news.getDescription());&#10;        holder.newsDate.setText(news.getDate());&#10;&#10;        // Set image using resource name&#10;        int imageResId = context.getResources().getIdentifier(news.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.newsImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return newsList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView newsImage;&#10;        TextView newsTitle;&#10;        TextView newsDescription;&#10;        TextView newsDate;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            newsImage = itemView.findViewById(R.id.news_image);&#10;            newsTitle = itemView.findViewById(R.id.news_title);&#10;            newsDescription = itemView.findViewById(R.id.news_description);&#10;            newsDate = itemView.findViewById(R.id.news_date);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.News;&#10;&#10;public class RecentNewsAdapter extends RecyclerView.Adapter&lt;RecentNewsAdapter.ViewHolder&gt; {&#10;    private List&lt;News&gt; newsList;&#10;    private Context context;&#10;&#10;    public RecentNewsAdapter(Context context, List&lt;News&gt; newsList) {&#10;        this.context = context;&#10;        this.newsList = newsList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_recent_news, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        News news = newsList.get(position);&#10;        holder.newsTitle.setText(news.getTitle());&#10;        holder.newsDescription.setText(news.getDescription());&#10;        holder.newsDate.setText(news.getDate());&#10;        &#10;        // Set image using resource name with .jpeg extension&#10;        int imageResId = context.getResources().getIdentifier(news.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.newsImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return newsList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView newsImage;&#10;        TextView newsTitle;&#10;        TextView newsDescription;&#10;        TextView newsDate;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            newsImage = itemView.findViewById(R.id.news_image);&#10;            newsTitle = itemView.findViewById(R.id.news_title);&#10;            newsDescription = itemView.findViewById(R.id.news_description);&#10;            newsDate = itemView.findViewById(R.id.news_date);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/WeeklyTopAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/adapter/WeeklyTopAdapter.java" />
              <option name="originalContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.Anime;&#10;&#10;public class WeeklyTopAdapter extends RecyclerView.Adapter&lt;WeeklyTopAdapter.ViewHolder&gt; {&#10;    private List&lt;Anime&gt; animeList;&#10;    private Context context;&#10;&#10;    public WeeklyTopAdapter(Context context, List&lt;Anime&gt; animeList) {&#10;        this.context = context;&#10;        this.animeList = animeList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_weekly_top, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Anime anime = animeList.get(position);&#10;        holder.animeTitle.setText(anime.getTitle());&#10;        holder.animeGenre.setText(anime.getGenre());&#10;&#10;        // Set image using resource name&#10;        int imageResId = context.getResources().getIdentifier(anime.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.animeImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return animeList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView animeImage;&#10;        TextView animeTitle;&#10;        TextView animeGenre;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            animeImage = itemView.findViewById(R.id.anime_image);&#10;            animeTitle = itemView.findViewById(R.id.anime_title);&#10;            animeGenre = itemView.findViewById(R.id.anime_genre);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package ac.id.binus.labux.adapter;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.model.Anime;&#10;&#10;public class WeeklyTopAdapter extends RecyclerView.Adapter&lt;WeeklyTopAdapter.ViewHolder&gt; {&#10;    private List&lt;Anime&gt; animeList;&#10;    private Context context;&#10;&#10;    public WeeklyTopAdapter(Context context, List&lt;Anime&gt; animeList) {&#10;        this.context = context;&#10;        this.animeList = animeList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_weekly_top, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Anime anime = animeList.get(position);&#10;        holder.animeTitle.setText(anime.getTitle());&#10;        holder.animeGenre.setText(anime.getGenre());&#10;&#10;        // Set image using resource name (.jpeg files)&#10;        int imageResId = context.getResources().getIdentifier(anime.getImageResource(), &quot;drawable&quot;, context.getPackageName());&#10;        if (imageResId != 0) {&#10;            holder.animeImage.setImageResource(imageResId);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return animeList.size();&#10;    }&#10;&#10;    public static class ViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView animeImage;&#10;        TextView animeTitle;&#10;        TextView animeGenre;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            animeImage = itemView.findViewById(R.id.anime_image);&#10;            animeTitle = itemView.findViewById(R.id.anime_title);&#10;            animeGenre = itemView.findViewById(R.id.anime_genre);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/MangaRelease.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/MangaRelease.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.model;&#10;&#10;public class MangaRelease {&#10;    private String title;&#10;    private String description;&#10;    private String chapter;&#10;    private String imageResource;&#10;    &#10;    public MangaRelease(String title, String description, String chapter, String imageResource) {&#10;        this.title = title;&#10;        this.description = description;&#10;        this.chapter = chapter;&#10;        this.imageResource = imageResource;&#10;    }&#10;    &#10;    // Getters&#10;    public String getTitle() { return title; }&#10;    public String getDescription() { return description; }&#10;    public String getChapter() { return chapter; }&#10;    public String getImageResource() { return imageResource; }&#10;    &#10;    // Setters&#10;    public void setTitle(String title) { this.title = title; }&#10;    public void setDescription(String description) { this.description = description; }&#10;    public void setChapter(String chapter) { this.chapter = chapter; }&#10;    public void setImageResource(String imageResource) { this.imageResource = imageResource; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/MangaUpdate.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/MangaUpdate.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.model;&#10;&#10;public class MangaUpdate {&#10;    private String title;&#10;    private String updateDate;&#10;    private String imageResource;&#10;    private String status; // e.g., &quot;Ch.159&quot;, &quot;NEW&quot;, etc.&#10;    &#10;    public MangaUpdate(String title, String updateDate, String imageResource, String status) {&#10;        this.title = title;&#10;        this.updateDate = updateDate;&#10;        this.imageResource = imageResource;&#10;        this.status = status;&#10;    }&#10;    &#10;    // Getters&#10;    public String getTitle() { return title; }&#10;    public String getUpdateDate() { return updateDate; }&#10;    public String getImageResource() { return imageResource; }&#10;    public String getStatus() { return status; }&#10;    &#10;    // Setters&#10;    public void setTitle(String title) { this.title = title; }&#10;    public void setUpdateDate(String updateDate) { this.updateDate = updateDate; }&#10;    public void setImageResource(String imageResource) { this.imageResource = imageResource; }&#10;    public void setStatus(String status) { this.status = status; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/News.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/News.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.model;&#10;&#10;public class News {&#10;    private String title;&#10;    private String description;&#10;    private String date;&#10;    private String imageResource;&#10;    &#10;    public News(String title, String description, String date, String imageResource) {&#10;        this.title = title;&#10;        this.description = description;&#10;        this.date = date;&#10;        this.imageResource = imageResource;&#10;    }&#10;    &#10;    // Getters&#10;    public String getTitle() { return title; }&#10;    public String getDescription() { return description; }&#10;    public String getDate() { return date; }&#10;    public String getImageResource() { return imageResource; }&#10;    &#10;    // Setters&#10;    public void setTitle(String title) { this.title = title; }&#10;    public void setDescription(String description) { this.description = description; }&#10;    public void setDate(String date) { this.date = date; }&#10;    public void setImageResource(String imageResource) { this.imageResource = imageResource; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/Review.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/model/Review.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.model;&#10;&#10;public class Review {&#10;    private String title;&#10;    private String subtitle;&#10;    private String description;&#10;    private int rating;&#10;    private String imageResource;&#10;    &#10;    public Review(String title, String subtitle, String description, int rating, String imageResource) {&#10;        this.title = title;&#10;        this.subtitle = subtitle;&#10;        this.description = description;&#10;        this.rating = rating;&#10;        this.imageResource = imageResource;&#10;    }&#10;    &#10;    // Getters&#10;    public String getTitle() { return title; }&#10;    public String getSubtitle() { return subtitle; }&#10;    public String getDescription() { return description; }&#10;    public int getRating() { return rating; }&#10;    public String getImageResource() { return imageResource; }&#10;    &#10;    // Setters&#10;    public void setTitle(String title) { this.title = title; }&#10;    public void setSubtitle(String subtitle) { this.subtitle = subtitle; }&#10;    public void setDescription(String description) { this.description = description; }&#10;    public void setRating(int rating) { this.rating = rating; }&#10;    public void setImageResource(String imageResource) { this.imageResource = imageResource; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/ui/home/HomeFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/ui/home/HomeFragment.java" />
              <option name="originalContent" value="package ac.id.binus.labux.ui.home;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.PopupWindow;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.viewpager2.widget.ViewPager2;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;import ac.id.binus.labux.LoginActivity;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.databinding.FragmentHomeBinding;&#10;import ac.id.binus.labux.model.Anime;&#10;import ac.id.binus.labux.model.News;&#10;import ac.id.binus.labux.model.Review;&#10;import ac.id.binus.labux.model.MangaUpdate;&#10;import ac.id.binus.labux.model.MangaRelease;&#10;import ac.id.binus.labux.adapter.WeeklyTopAdapter;&#10;import ac.id.binus.labux.adapter.RecentNewsAdapter;&#10;import ac.id.binus.labux.adapter.LatestReviewAdapter;&#10;import ac.id.binus.labux.adapter.MangaUpdateAdapter;&#10;import ac.id.binus.labux.adapter.MangaReleaseAdapter;&#10;import ac.id.binus.labux.adapter.AnimeCarouselAdapter;&#10;&#10;public class HomeFragment extends Fragment {&#10;&#10;    private FragmentHomeBinding binding;&#10;    private boolean isMangaTabSelected = false;&#10;    private List&lt;Anime&gt; carouselAnimeList;&#10;    private AnimeCarouselAdapter carouselAdapter;&#10;    private Handler autoScrollHandler;&#10;    private Runnable autoScrollRunnable;&#10;    private int currentPage = 0;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        binding = FragmentHomeBinding.inflate(inflater, container, false);&#10;        View root = binding.getRoot();&#10;&#10;        setupRecyclerViews();&#10;        setupAnimeCarousel();&#10;        setupTabSwitching();&#10;        setupMenuDropdown();&#10;&#10;        // Load anime content by default&#10;        loadAnimeContent();&#10;&#10;        return root;&#10;    }&#10;&#10;    private void setupAnimeCarousel() {&#10;        // Create anime list for carousel&#10;        carouselAnimeList = new ArrayList&lt;&gt;();&#10;        carouselAnimeList.add(new Anime(&quot;Shingeki No Kyojin&quot;, &quot;ACTION&quot;, &quot;shingeki_no_kyojin&quot;, &quot;shingeki_no_kyojin_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Kimetsu No Yaiba&quot;, &quot;ACTION&quot;, &quot;kimetsu_no_yaiba&quot;, &quot;kimetsu_no_yaiba_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Tokyo Ghoul&quot;, &quot;DARK FANTASY&quot;, &quot;tokyo_ghoul&quot;, &quot;tokyo_ghoul_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Chainsaw Man&quot;, &quot;ACTION&quot;, &quot;chainsaw_man&quot;, &quot;chainsaw_man_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Sword Art Online&quot;, &quot;ADVENTURE&quot;, &quot;sword_art_online&quot;, &quot;sword_art_online_wide&quot;));&#10;&#10;        // Setup ViewPager2 with adapter&#10;        carouselAdapter = new AnimeCarouselAdapter(getContext(), carouselAnimeList);&#10;        binding.animeCarouselViewpager.setAdapter(carouselAdapter);&#10;&#10;        // Setup indicators&#10;        setupCarouselIndicators();&#10;&#10;        // Setup page change callback for updating indicators&#10;        binding.animeCarouselViewpager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {&#10;            @Override&#10;            public void onPageSelected(int position) {&#10;                super.onPageSelected(position);&#10;                currentPage = position;&#10;                updateIndicators(position);&#10;            }&#10;        });&#10;&#10;        // Setup navigation button click listeners&#10;        setupCarouselNavigation();&#10;&#10;        // Setup auto-scroll&#10;        setupAutoScroll();&#10;    }&#10;&#10;    private void setupCarouselIndicators() {&#10;        binding.carouselIndicators.removeAllViews();&#10;&#10;        ImageView[] indicators = new ImageView[carouselAnimeList.size()];&#10;        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(&#10;            ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT&#10;        );&#10;        layoutParams.setMargins(4, 0, 4, 0);&#10;&#10;        for (int i = 0; i &lt; indicators.length; i++) {&#10;            indicators[i] = new ImageView(getContext());&#10;            indicators[i].setImageDrawable(ContextCompat.getDrawable(getContext(),&#10;                i == 0 ? R.drawable.indicator_active : R.drawable.indicator_inactive));&#10;            indicators[i].setLayoutParams(layoutParams);&#10;            binding.carouselIndicators.addView(indicators[i]);&#10;        }&#10;    }&#10;&#10;    private void updateIndicators(int position) {&#10;        for (int i = 0; i &lt; binding.carouselIndicators.getChildCount(); i++) {&#10;            ImageView indicator = (ImageView) binding.carouselIndicators.getChildAt(i);&#10;            if (i == position) {&#10;                indicator.setImageDrawable(ContextCompat.getDrawable(getContext(), R.drawable.indicator_active));&#10;            } else {&#10;                indicator.setImageDrawable(ContextCompat.getDrawable(getContext(), R.drawable.indicator_inactive));&#10;            }&#10;        }&#10;    }&#10;&#10;    private void setupAutoScroll() {&#10;        autoScrollHandler = new Handler(Looper.getMainLooper());&#10;        autoScrollRunnable = new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                if (carouselAnimeList != null &amp;&amp; carouselAnimeList.size() &gt; 0) {&#10;                    currentPage = (currentPage + 1) % carouselAnimeList.size();&#10;                    binding.animeCarouselViewpager.setCurrentItem(currentPage, true);&#10;                    autoScrollHandler.postDelayed(this, 5000); // 5 seconds&#10;                }&#10;            }&#10;        };&#10;        startAutoScroll();&#10;    }&#10;&#10;    private void startAutoScroll() {&#10;        stopAutoScroll();&#10;        autoScrollHandler.postDelayed(autoScrollRunnable, 5000);&#10;    }&#10;&#10;    private void stopAutoScroll() {&#10;        if (autoScrollHandler != null &amp;&amp; autoScrollRunnable != null) {&#10;            autoScrollHandler.removeCallbacks(autoScrollRunnable);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerViews() {&#10;        // Setup Weekly Top 3 RecyclerView&#10;        LinearLayoutManager weeklyLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);&#10;        binding.weeklyTopRecyclerview.setLayoutManager(weeklyLayoutManager);&#10;&#10;        // Setup Section 1 RecyclerView (News/Manga Updates)&#10;        LinearLayoutManager section1LayoutManager = new LinearLayoutManager(getContext());&#10;        binding.section1Recyclerview.setLayoutManager(section1LayoutManager);&#10;&#10;        // Setup Section 2 RecyclerView (Reviews/Manga Releases)&#10;        LinearLayoutManager section2LayoutManager = new LinearLayoutManager(getContext());&#10;        binding.section2Recyclerview.setLayoutManager(section2LayoutManager);&#10;&#10;        // Create sample data and set adapters&#10;        setupWeeklyTopData();&#10;        setupRecentNewsData();&#10;        setupLatestReviewData();&#10;    }&#10;&#10;    private void setupWeeklyTopData() {&#10;        List&lt;Anime&gt; weeklyTopAnime = new ArrayList&lt;&gt;();&#10;        weeklyTopAnime.add(new Anime(&quot;Shingeki No Kyojin&quot;, &quot;ACTION&quot;, &quot;shingeki_no_kyojin&quot;, &quot;shingeki_no_kyojin_wide&quot;));&#10;        weeklyTopAnime.add(new Anime(&quot;Kimetsu No Yaiba&quot;, &quot;ACTION&quot;, &quot;kimetsu_no_yaiba&quot;, &quot;kimetsu_no_yaiba_wide&quot;));&#10;        weeklyTopAnime.add(new Anime(&quot;Tokyo Ghoul&quot;, &quot;DARK FANTASY&quot;, &quot;tokyo_ghoul&quot;, &quot;tokyo_ghoul_wide&quot;));&#10;&#10;        WeeklyTopAdapter weeklyAdapter = new WeeklyTopAdapter(getContext(), weeklyTopAnime);&#10;        binding.weeklyTopRecyclerview.setAdapter(weeklyAdapter);&#10;    }&#10;&#10;    private void setupRecentNewsData() {&#10;        List&lt;News&gt; recentNews = new ArrayList&lt;&gt;();&#10;        recentNews.add(new News(&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;In a world where humanity is on the brink of extinction due to giant humanoid creatures known as Titans...&quot;,&#10;            &quot;Posted on May 30, 2025&quot;,&#10;            &quot;shingeki_no_kyojin&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Demon Slayer&quot;,&#10;            &quot;After his family is slaughtered by demons and his sister is turned into one, Tanjiro Kamado becomes a demon slayer...&quot;,&#10;            &quot;Posted on June 3, 2025&quot;,&#10;            &quot;kimetsu_no_yaiba&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Chainsaw Man&quot;,&#10;            &quot;In a world where humanity battles devil creatures, Denji becomes the Chainsaw Man after merging with his devil dog Pochita...&quot;,&#10;            &quot;Posted on June 15, 2025&quot;,&#10;            &quot;chainsaw_man&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Tokyo Ghoul&quot;,&#10;            &quot;Ken Kaneki's life changes forever when he encounters his date, Rize, who reveals herself to be a flesh-eating ghoul...&quot;,&#10;            &quot;Posted on June 20, 2025&quot;,&#10;            &quot;tokyo_ghoul&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Sword Art Online&quot;,&#10;            &quot;Players become trapped in a virtual reality MMORPG where death in the game means death in real life...&quot;,&#10;            &quot;Posted on June 25, 2025&quot;,&#10;            &quot;sword_art_online&quot;&#10;        ));&#10;&#10;        RecentNewsAdapter newsAdapter = new RecentNewsAdapter(getContext(), recentNews);&#10;        binding.section1Recyclerview.setAdapter(newsAdapter);&#10;    }&#10;&#10;    private void setupLatestReviewData() {&#10;        List&lt;Review&gt; latestReviews = new ArrayList&lt;&gt;();&#10;        latestReviews.add(new Review(&#10;            &quot;Shingeki No Kyojin&quot;,&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;Whispers from the Abyss: A harrowing tale that gripped us from the first episode. The story of humanity's fight against titans delivers exceptional character development and plot twists that redefine the genre.&quot;,&#10;            5,&#10;            &quot;shingeki_no_kyojin&quot;&#10;        ));&#10;        latestReviews.add(new Review(&#10;            &quot;Tokyo Ghoul&quot;,&#10;            &quot;Dark Fantasy Masterpiece&quot;,&#10;            &quot;A perfect blend of horror and humanity. Tokyo Ghoul explores the thin line between monster and human through Ken Kaneki's transformation. The psychological depth is unmatched.&quot;,&#10;            4,&#10;            &quot;tokyo_ghoul&quot;&#10;        ));&#10;&#10;        LatestReviewAdapter reviewAdapter = new LatestReviewAdapter(getContext(), latestReviews);&#10;        binding.section2Recyclerview.setAdapter(reviewAdapter);&#10;    }&#10;&#10;    private void setupTabSwitching() {&#10;        binding.newsTab.setOnClickListener(v -&gt; {&#10;            // Switch to news tab&#10;            binding.newsTab.setBackgroundResource(R.drawable.tab_selected_yellow);&#10;            binding.newsTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.background_dark));&#10;            binding.mangaTab.setBackground(null);&#10;            binding.mangaTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.text_secondary));&#10;&#10;            isMangaTabSelected = false;&#10;            loadAnimeContent();&#10;        });&#10;&#10;        binding.mangaTab.setOnClickListener(v -&gt; {&#10;            // Switch to manga tab&#10;            binding.mangaTab.setBackgroundResource(R.drawable.tab_selected_yellow);&#10;            binding.mangaTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.background_dark));&#10;            binding.newsTab.setBackground(null);&#10;            binding.newsTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.text_secondary));&#10;&#10;            isMangaTabSelected = true;&#10;            loadMangaContent();&#10;        });&#10;    }&#10;&#10;    private void loadAnimeContent() {&#10;        // Show anime sections&#10;        binding.featuredSection.setVisibility(View.VISIBLE);&#10;        binding.mangaCarousel.getRoot().setVisibility(View.GONE);&#10;        binding.weeklyTopTitle.setVisibility(View.VISIBLE);&#10;        binding.weeklyTopRecyclerview.setVisibility(View.VISIBLE);&#10;&#10;        // Update section titles&#10;        binding.section1Title.setText(R.string.recent_news);&#10;        binding.section2Title.setText(R.string.latest_review);&#10;&#10;        // Setup anime data&#10;        setupRecentNewsData();&#10;        setupLatestReviewData();&#10;&#10;        // Start auto-scroll for carousel&#10;        startAutoScroll();&#10;    }&#10;&#10;    private void loadMangaContent() {&#10;        // Hide anime sections, show manga sections&#10;        binding.featuredSection.setVisibility(View.GONE);&#10;        binding.mangaCarousel.getRoot().setVisibility(View.VISIBLE);&#10;        binding.weeklyTopTitle.setVisibility(View.GONE);&#10;        binding.weeklyTopRecyclerview.setVisibility(View.GONE);&#10;&#10;        // Update section titles for manga&#10;        binding.section1Title.setText(R.string.popular_manga_updates);&#10;        binding.section2Title.setText(R.string.latest_manga_releases);&#10;&#10;        // Setup manga data&#10;        setupPopularMangaUpdatesData();&#10;        setupLatestMangaReleasesData();&#10;&#10;        // Stop auto-scroll when in manga mode&#10;        stopAutoScroll();&#10;    }&#10;&#10;    private void setupPopularMangaUpdatesData() {&#10;        List&lt;MangaUpdate&gt; mangaUpdates = new ArrayList&lt;&gt;();&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Tensei Shitara Slime Datta&quot;,&#10;            &quot;Dec 7, 2024&quot;,&#10;            &quot;shingeki_no_kyojin_manga&quot;,&#10;            &quot;Ch.159&quot;&#10;        ));&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Kusuriya no Hitorigoto&quot;,&#10;            &quot;Feb 14, 2025&quot;,&#10;            &quot;kimetsu_no_yaiba_manga&quot;,&#10;            &quot;Ch.78&quot;&#10;        ));&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Sono Bisque Doll wa Koi wo Suru&quot;,&#10;            &quot;May 11, 2025&quot;,&#10;            &quot;tokyo_ghoul_manga&quot;,&#10;            &quot;Ch.97&quot;&#10;        ));&#10;&#10;        // Setup RecyclerView with horizontal layout for manga updates&#10;        LinearLayoutManager mangaUpdateLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);&#10;        binding.section1Recyclerview.setLayoutManager(mangaUpdateLayoutManager);&#10;        binding.section1Recyclerview.setLayoutParams(new LinearLayout.LayoutParams(&#10;            LinearLayout.LayoutParams.MATCH_PARENT,&#10;            LinearLayout.LayoutParams.WRAP_CONTENT&#10;        ));&#10;&#10;        MangaUpdateAdapter mangaUpdateAdapter = new MangaUpdateAdapter(getContext(), mangaUpdates);&#10;        binding.section1Recyclerview.setAdapter(mangaUpdateAdapter);&#10;    }&#10;&#10;    private void setupLatestMangaReleasesData() {&#10;        List&lt;MangaRelease&gt; mangaReleases = new ArrayList&lt;&gt;();&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;In a world where memories can be bought and sold, Eiji wakes up with no past—only a haunting image of a city in flames. As he searches for the truth, he uncovers a memory-altering AI and begins to question whether his identity is even real.&quot;,&#10;            &quot;Chapter 110 - Hells of Tokyo&quot;,&#10;            &quot;shingeki_no_kyojin_manga&quot;&#10;        ));&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Demon Slayer&quot;,&#10;            &quot;Akari, cursed to bloom blood-red flowers under the full moon, meets a wandering samurai who sees beyond her curse. Together, they defy warlords and fate in a tale of forbidden love, ancient spirits and sacrifice.&quot;,&#10;            &quot;Chapter 262 - Domain Collapse&quot;,&#10;            &quot;kimetsu_no_yaiba_manga&quot;&#10;        ));&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Neon Orphans&quot;,&#10;            &quot;In the neon-soaked underworld of Neo-Tokyo, a group of orphaned hackers discover they're the key to stopping a corporate conspiracy that threatens to erase human consciousness itself.&quot;,&#10;            &quot;Chapter 15 - Digital Dreams&quot;,&#10;            &quot;chainsaw_man_manga&quot;&#10;        ));&#10;&#10;        MangaReleaseAdapter mangaReleaseAdapter = new MangaReleaseAdapter(getContext(), mangaReleases);&#10;        binding.section2Recyclerview.setAdapter(mangaReleaseAdapter);&#10;    }&#10;&#10;    private void setupCarouselNavigation() {&#10;        binding.carouselNavLeft.setOnClickListener(v -&gt; {&#10;            int currentItem = binding.animeCarouselViewpager.getCurrentItem();&#10;            int previousItem;&#10;&#10;            if (currentItem == 0) {&#10;                // Wrap to last item&#10;                previousItem = carouselAnimeList.size() - 1;&#10;            } else {&#10;                previousItem = currentItem - 1;&#10;            }&#10;&#10;            binding.animeCarouselViewpager.setCurrentItem(previousItem, true);&#10;&#10;            // Reset auto-scroll timer when user manually navigates&#10;            startAutoScroll();&#10;        });&#10;&#10;        binding.carouselNavRight.setOnClickListener(v -&gt; {&#10;            int currentItem = binding.animeCarouselViewpager.getCurrentItem();&#10;            int nextItem;&#10;&#10;            if (currentItem == carouselAnimeList.size() - 1) {&#10;                // Wrap to first item&#10;                nextItem = 0;&#10;            } else {&#10;                nextItem = currentItem + 1;&#10;            }&#10;&#10;            binding.animeCarouselViewpager.setCurrentItem(nextItem, true);&#10;&#10;            // Reset auto-scroll timer when user manually navigates&#10;            startAutoScroll();&#10;        });&#10;    }&#10;&#10;    private void setupMenuDropdown() {&#10;        binding.menuIcon.setOnClickListener(v -&gt; showDropdownMenu(v));&#10;    }&#10;&#10;    private void showDropdownMenu(View anchorView) {&#10;        // Inflate the dropdown menu layout&#10;        LayoutInflater inflater = LayoutInflater.from(getContext());&#10;        View dropdownView = inflater.inflate(R.layout.dropdown_menu, null);&#10;&#10;        // Create popup window&#10;        PopupWindow popupWindow = new PopupWindow(&#10;            dropdownView,&#10;            ViewGroup.LayoutParams.WRAP_CONTENT,&#10;            ViewGroup.LayoutParams.WRAP_CONTENT,&#10;            true&#10;        );&#10;&#10;        // Set up logout click listener&#10;        dropdownView.findViewById(R.id.menu_logout).setOnClickListener(v -&gt; {&#10;            popupWindow.dismiss();&#10;            logout();&#10;        });&#10;&#10;        // Set popup window properties&#10;        popupWindow.setOutsideTouchable(true);&#10;        popupWindow.setFocusable(true);&#10;&#10;        // Show popup below and to the right of the menu icon&#10;        int[] location = new int[2];&#10;        anchorView.getLocationOnScreen(location);&#10;        popupWindow.showAtLocation(anchorView,&#10;            android.view.Gravity.NO_GRAVITY,&#10;            location[0],&#10;            location[1] + anchorView.getHeight() + 8);&#10;    }&#10;&#10;    private void logout() {&#10;        // Stop any ongoing auto-scroll&#10;        stopAutoScroll();&#10;&#10;        // Create intent to go back to LoginActivity&#10;        Intent loginIntent = new Intent(getActivity(), LoginActivity.class);&#10;        loginIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(loginIntent);&#10;&#10;        // Finish the current activity&#10;        if (getActivity() != null) {&#10;            getActivity().finish();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        stopAutoScroll();&#10;        binding = null;&#10;    }&#10;&#10;    @Override&#10;    public void onPause() {&#10;        super.onPause();&#10;        stopAutoScroll();&#10;    }&#10;&#10;    @Override&#10;    public void onResume() {&#10;        super.onResume();&#10;        if (!isMangaTabSelected) {&#10;            startAutoScroll();&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package ac.id.binus.labux.ui.home;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.PopupWindow;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.viewpager2.widget.ViewPager2;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;import ac.id.binus.labux.LoginActivity;&#10;import ac.id.binus.labux.R;&#10;import ac.id.binus.labux.databinding.FragmentHomeBinding;&#10;import ac.id.binus.labux.model.Anime;&#10;import ac.id.binus.labux.model.News;&#10;import ac.id.binus.labux.model.Review;&#10;import ac.id.binus.labux.model.MangaUpdate;&#10;import ac.id.binus.labux.model.MangaRelease;&#10;import ac.id.binus.labux.adapter.WeeklyTopAdapter;&#10;import ac.id.binus.labux.adapter.RecentNewsAdapter;&#10;import ac.id.binus.labux.adapter.LatestReviewAdapter;&#10;import ac.id.binus.labux.adapter.MangaUpdateAdapter;&#10;import ac.id.binus.labux.adapter.MangaReleaseAdapter;&#10;import ac.id.binus.labux.adapter.AnimeCarouselAdapter;&#10;import ac.id.binus.labux.utils.UserSession;&#10;&#10;public class HomeFragment extends Fragment {&#10;&#10;    private FragmentHomeBinding binding;&#10;    private boolean isMangaTabSelected = false;&#10;    private List&lt;Anime&gt; carouselAnimeList;&#10;    private AnimeCarouselAdapter carouselAdapter;&#10;    private Handler autoScrollHandler;&#10;    private Runnable autoScrollRunnable;&#10;    private int currentPage = 0;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        binding = FragmentHomeBinding.inflate(inflater, container, false);&#10;        View root = binding.getRoot();&#10;&#10;        setupRecyclerViews();&#10;        setupAnimeCarousel();&#10;        setupTabSwitching();&#10;        setupMenuDropdown();&#10;        setupWelcomeMessage();&#10;&#10;        // Load anime content by default&#10;        loadAnimeContent();&#10;&#10;        return root;&#10;    }&#10;&#10;    private void setupWelcomeMessage() {&#10;        String username = UserSession.getInstance().getUsername();&#10;        if (username != null &amp;&amp; !username.isEmpty()) {&#10;            // Capitalize first letter of username&#10;            String capitalizedUsername = username.substring(0, 1).toUpperCase() + username.substring(1).toLowerCase();&#10;            binding.welcomeTitle.setText(&quot;Welcome, &quot; + capitalizedUsername);&#10;        } else {&#10;            // Fallback if no username is stored&#10;            binding.welcomeTitle.setText(&quot;Welcome, User&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupAnimeCarousel() {&#10;        // Create anime list for carousel&#10;        carouselAnimeList = new ArrayList&lt;&gt;();&#10;        carouselAnimeList.add(new Anime(&quot;Shingeki No Kyojin&quot;, &quot;ACTION&quot;, &quot;shingeki_no_kyojin&quot;, &quot;shingeki_no_kyojin_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Kimetsu No Yaiba&quot;, &quot;ACTION&quot;, &quot;kimetsu_no_yaiba&quot;, &quot;kimetsu_no_yaiba_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Tokyo Ghoul&quot;, &quot;DARK FANTASY&quot;, &quot;tokyo_ghoul&quot;, &quot;tokyo_ghoul_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Chainsaw Man&quot;, &quot;ACTION&quot;, &quot;chainsaw_man&quot;, &quot;chainsaw_man_wide&quot;));&#10;        carouselAnimeList.add(new Anime(&quot;Sword Art Online&quot;, &quot;ADVENTURE&quot;, &quot;sword_art_online&quot;, &quot;sword_art_online_wide&quot;));&#10;&#10;        // Setup ViewPager2 with adapter&#10;        carouselAdapter = new AnimeCarouselAdapter(getContext(), carouselAnimeList);&#10;        binding.animeCarouselViewpager.setAdapter(carouselAdapter);&#10;&#10;        // Setup indicators&#10;        setupCarouselIndicators();&#10;&#10;        // Setup page change callback for updating indicators&#10;        binding.animeCarouselViewpager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {&#10;            @Override&#10;            public void onPageSelected(int position) {&#10;                super.onPageSelected(position);&#10;                currentPage = position;&#10;                updateIndicators(position);&#10;            }&#10;        });&#10;&#10;        // Setup navigation button click listeners&#10;        setupCarouselNavigation();&#10;&#10;        // Setup auto-scroll&#10;        setupAutoScroll();&#10;    }&#10;&#10;    private void setupCarouselIndicators() {&#10;        binding.carouselIndicators.removeAllViews();&#10;&#10;        ImageView[] indicators = new ImageView[carouselAnimeList.size()];&#10;        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(&#10;            ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT&#10;        );&#10;        layoutParams.setMargins(4, 0, 4, 0);&#10;&#10;        for (int i = 0; i &lt; indicators.length; i++) {&#10;            indicators[i] = new ImageView(getContext());&#10;            indicators[i].setImageDrawable(ContextCompat.getDrawable(getContext(),&#10;                i == 0 ? R.drawable.indicator_active : R.drawable.indicator_inactive));&#10;            indicators[i].setLayoutParams(layoutParams);&#10;            binding.carouselIndicators.addView(indicators[i]);&#10;        }&#10;    }&#10;&#10;    private void updateIndicators(int position) {&#10;        for (int i = 0; i &lt; binding.carouselIndicators.getChildCount(); i++) {&#10;            ImageView indicator = (ImageView) binding.carouselIndicators.getChildAt(i);&#10;            if (i == position) {&#10;                indicator.setImageDrawable(ContextCompat.getDrawable(getContext(), R.drawable.indicator_active));&#10;            } else {&#10;                indicator.setImageDrawable(ContextCompat.getDrawable(getContext(), R.drawable.indicator_inactive));&#10;            }&#10;        }&#10;    }&#10;&#10;    private void setupAutoScroll() {&#10;        autoScrollHandler = new Handler(Looper.getMainLooper());&#10;        autoScrollRunnable = new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                if (carouselAnimeList != null &amp;&amp; carouselAnimeList.size() &gt; 0) {&#10;                    currentPage = (currentPage + 1) % carouselAnimeList.size();&#10;                    binding.animeCarouselViewpager.setCurrentItem(currentPage, true);&#10;                    autoScrollHandler.postDelayed(this, 5000); // 5 seconds&#10;                }&#10;            }&#10;        };&#10;        startAutoScroll();&#10;    }&#10;&#10;    private void startAutoScroll() {&#10;        stopAutoScroll();&#10;        autoScrollHandler.postDelayed(autoScrollRunnable, 5000);&#10;    }&#10;&#10;    private void stopAutoScroll() {&#10;        if (autoScrollHandler != null &amp;&amp; autoScrollRunnable != null) {&#10;            autoScrollHandler.removeCallbacks(autoScrollRunnable);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerViews() {&#10;        // Setup Weekly Top 3 RecyclerView&#10;        LinearLayoutManager weeklyLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);&#10;        binding.weeklyTopRecyclerview.setLayoutManager(weeklyLayoutManager);&#10;&#10;        // Setup Section 1 RecyclerView (News/Manga Updates)&#10;        LinearLayoutManager section1LayoutManager = new LinearLayoutManager(getContext());&#10;        binding.section1Recyclerview.setLayoutManager(section1LayoutManager);&#10;&#10;        // Setup Section 2 RecyclerView (Reviews/Manga Releases)&#10;        LinearLayoutManager section2LayoutManager = new LinearLayoutManager(getContext());&#10;        binding.section2Recyclerview.setLayoutManager(section2LayoutManager);&#10;&#10;        // Create sample data and set adapters&#10;        setupWeeklyTopData();&#10;        setupRecentNewsData();&#10;        setupLatestReviewData();&#10;    }&#10;&#10;    private void setupWeeklyTopData() {&#10;        List&lt;Anime&gt; weeklyTopAnime = new ArrayList&lt;&gt;();&#10;        weeklyTopAnime.add(new Anime(&quot;Shingeki No Kyojin&quot;, &quot;ACTION&quot;, &quot;shingeki_no_kyojin&quot;, &quot;shingeki_no_kyojin_wide&quot;));&#10;        weeklyTopAnime.add(new Anime(&quot;Kimetsu No Yaiba&quot;, &quot;ACTION&quot;, &quot;kimetsu_no_yaiba&quot;, &quot;kimetsu_no_yaiba_wide&quot;));&#10;        weeklyTopAnime.add(new Anime(&quot;Tokyo Ghoul&quot;, &quot;DARK FANTASY&quot;, &quot;tokyo_ghoul&quot;, &quot;tokyo_ghoul_wide&quot;));&#10;&#10;        WeeklyTopAdapter weeklyAdapter = new WeeklyTopAdapter(getContext(), weeklyTopAnime);&#10;        binding.weeklyTopRecyclerview.setAdapter(weeklyAdapter);&#10;    }&#10;&#10;    private void setupRecentNewsData() {&#10;        List&lt;News&gt; recentNews = new ArrayList&lt;&gt;();&#10;        recentNews.add(new News(&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;In a world where humanity is on the brink of extinction due to giant humanoid creatures known as Titans...&quot;,&#10;            &quot;Posted on May 30, 2025&quot;,&#10;            &quot;shingeki_no_kyojin&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Demon Slayer&quot;,&#10;            &quot;After his family is slaughtered by demons and his sister is turned into one, Tanjiro Kamado becomes a demon slayer...&quot;,&#10;            &quot;Posted on June 3, 2025&quot;,&#10;            &quot;kimetsu_no_yaiba&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Chainsaw Man&quot;,&#10;            &quot;In a world where humanity battles devil creatures, Denji becomes the Chainsaw Man after merging with his devil dog Pochita...&quot;,&#10;            &quot;Posted on June 15, 2025&quot;,&#10;            &quot;chainsaw_man&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Tokyo Ghoul&quot;,&#10;            &quot;Ken Kaneki's life changes forever when he encounters his date, Rize, who reveals herself to be a flesh-eating ghoul...&quot;,&#10;            &quot;Posted on June 20, 2025&quot;,&#10;            &quot;tokyo_ghoul&quot;&#10;        ));&#10;        recentNews.add(new News(&#10;            &quot;Sword Art Online&quot;,&#10;            &quot;Players become trapped in a virtual reality MMORPG where death in the game means death in real life...&quot;,&#10;            &quot;Posted on June 25, 2025&quot;,&#10;            &quot;sword_art_online&quot;&#10;        ));&#10;&#10;        RecentNewsAdapter newsAdapter = new RecentNewsAdapter(getContext(), recentNews);&#10;        binding.section1Recyclerview.setAdapter(newsAdapter);&#10;    }&#10;&#10;    private void setupLatestReviewData() {&#10;        List&lt;Review&gt; latestReviews = new ArrayList&lt;&gt;();&#10;        latestReviews.add(new Review(&#10;            &quot;Shingeki No Kyojin&quot;,&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;Whispers from the Abyss: A harrowing tale that gripped us from the first episode. The story of humanity's fight against titans delivers exceptional character development and plot twists that redefine the genre.&quot;,&#10;            5,&#10;            &quot;shingeki_no_kyojin&quot;&#10;        ));&#10;        latestReviews.add(new Review(&#10;            &quot;Tokyo Ghoul&quot;,&#10;            &quot;Dark Fantasy Masterpiece&quot;,&#10;            &quot;A perfect blend of horror and humanity. Tokyo Ghoul explores the thin line between monster and human through Ken Kaneki's transformation. The psychological depth is unmatched.&quot;,&#10;            4,&#10;            &quot;tokyo_ghoul&quot;&#10;        ));&#10;&#10;        LatestReviewAdapter reviewAdapter = new LatestReviewAdapter(getContext(), latestReviews);&#10;        binding.section2Recyclerview.setAdapter(reviewAdapter);&#10;    }&#10;&#10;    private void setupTabSwitching() {&#10;        binding.newsTab.setOnClickListener(v -&gt; {&#10;            // Switch to news tab&#10;            binding.newsTab.setBackgroundResource(R.drawable.tab_selected_yellow);&#10;            binding.newsTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.background_dark));&#10;            binding.mangaTab.setBackground(null);&#10;            binding.mangaTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.text_secondary));&#10;&#10;            isMangaTabSelected = false;&#10;            loadAnimeContent();&#10;        });&#10;&#10;        binding.mangaTab.setOnClickListener(v -&gt; {&#10;            // Switch to manga tab&#10;            binding.mangaTab.setBackgroundResource(R.drawable.tab_selected_yellow);&#10;            binding.mangaTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.background_dark));&#10;            binding.newsTab.setBackground(null);&#10;            binding.newsTab.setTextColor(ContextCompat.getColor(requireContext(), R.color.text_secondary));&#10;&#10;            isMangaTabSelected = true;&#10;            loadMangaContent();&#10;        });&#10;    }&#10;&#10;    private void loadAnimeContent() {&#10;        // Show anime sections&#10;        binding.featuredSection.setVisibility(View.VISIBLE);&#10;        binding.mangaCarousel.getRoot().setVisibility(View.GONE);&#10;        binding.weeklyTopTitle.setVisibility(View.VISIBLE);&#10;        binding.weeklyTopRecyclerview.setVisibility(View.VISIBLE);&#10;&#10;        // Update section titles&#10;        binding.section1Title.setText(R.string.recent_news);&#10;        binding.section2Title.setText(R.string.latest_review);&#10;&#10;        // Setup anime data&#10;        setupRecentNewsData();&#10;        setupLatestReviewData();&#10;&#10;        // Start auto-scroll for carousel&#10;        startAutoScroll();&#10;    }&#10;&#10;    private void loadMangaContent() {&#10;        // Hide anime sections, show manga sections&#10;        binding.featuredSection.setVisibility(View.GONE);&#10;        binding.mangaCarousel.getRoot().setVisibility(View.VISIBLE);&#10;        binding.weeklyTopTitle.setVisibility(View.GONE);&#10;        binding.weeklyTopRecyclerview.setVisibility(View.GONE);&#10;&#10;        // Update section titles for manga&#10;        binding.section1Title.setText(R.string.popular_manga_updates);&#10;        binding.section2Title.setText(R.string.latest_manga_releases);&#10;&#10;        // Setup manga data&#10;        setupPopularMangaUpdatesData();&#10;        setupLatestMangaReleasesData();&#10;&#10;        // Stop auto-scroll when in manga mode&#10;        stopAutoScroll();&#10;    }&#10;&#10;    private void setupPopularMangaUpdatesData() {&#10;        List&lt;MangaUpdate&gt; mangaUpdates = new ArrayList&lt;&gt;();&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Tensei Shitara Slime Datta&quot;,&#10;            &quot;Dec 7, 2024&quot;,&#10;            &quot;shingeki_no_kyojin_manga&quot;,&#10;            &quot;Ch.159&quot;&#10;        ));&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Kusuriya no Hitorigoto&quot;,&#10;            &quot;Feb 14, 2025&quot;,&#10;            &quot;kimetsu_no_yaiba_manga&quot;,&#10;            &quot;Ch.78&quot;&#10;        ));&#10;        mangaUpdates.add(new MangaUpdate(&#10;            &quot;Sono Bisque Doll wa Koi wo Suru&quot;,&#10;            &quot;May 11, 2025&quot;,&#10;            &quot;tokyo_ghoul_manga&quot;,&#10;            &quot;Ch.97&quot;&#10;        ));&#10;&#10;        // Setup RecyclerView with horizontal layout for manga updates&#10;        LinearLayoutManager mangaUpdateLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);&#10;        binding.section1Recyclerview.setLayoutManager(mangaUpdateLayoutManager);&#10;        binding.section1Recyclerview.setLayoutParams(new LinearLayout.LayoutParams(&#10;            LinearLayout.LayoutParams.MATCH_PARENT,&#10;            LinearLayout.LayoutParams.WRAP_CONTENT&#10;        ));&#10;&#10;        MangaUpdateAdapter mangaUpdateAdapter = new MangaUpdateAdapter(getContext(), mangaUpdates);&#10;        binding.section1Recyclerview.setAdapter(mangaUpdateAdapter);&#10;    }&#10;&#10;    private void setupLatestMangaReleasesData() {&#10;        List&lt;MangaRelease&gt; mangaReleases = new ArrayList&lt;&gt;();&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Attack On Titan&quot;,&#10;            &quot;In a world where memories can be bought and sold, Eiji wakes up with no past—only a haunting image of a city in flames. As he searches for the truth, he uncovers a memory-altering AI and begins to question whether his identity is even real.&quot;,&#10;            &quot;Chapter 110 - Hells of Tokyo&quot;,&#10;            &quot;shingeki_no_kyojin_manga&quot;&#10;        ));&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Demon Slayer&quot;,&#10;            &quot;Akari, cursed to bloom blood-red flowers under the full moon, meets a wandering samurai who sees beyond her curse. Together, they defy warlords and fate in a tale of forbidden love, ancient spirits and sacrifice.&quot;,&#10;            &quot;Chapter 262 - Domain Collapse&quot;,&#10;            &quot;kimetsu_no_yaiba_manga&quot;&#10;        ));&#10;        mangaReleases.add(new MangaRelease(&#10;            &quot;Neon Orphans&quot;,&#10;            &quot;In the neon-soaked underworld of Neo-Tokyo, a group of orphaned hackers discover they're the key to stopping a corporate conspiracy that threatens to erase human consciousness itself.&quot;,&#10;            &quot;Chapter 15 - Digital Dreams&quot;,&#10;            &quot;chainsaw_man_manga&quot;&#10;        ));&#10;&#10;        MangaReleaseAdapter mangaReleaseAdapter = new MangaReleaseAdapter(getContext(), mangaReleases);&#10;        binding.section2Recyclerview.setAdapter(mangaReleaseAdapter);&#10;    }&#10;&#10;    private void setupCarouselNavigation() {&#10;        binding.carouselNavLeft.setOnClickListener(v -&gt; {&#10;            int currentItem = binding.animeCarouselViewpager.getCurrentItem();&#10;            int previousItem;&#10;&#10;            if (currentItem == 0) {&#10;                // Wrap to last item&#10;                previousItem = carouselAnimeList.size() - 1;&#10;            } else {&#10;                previousItem = currentItem - 1;&#10;            }&#10;&#10;            binding.animeCarouselViewpager.setCurrentItem(previousItem, true);&#10;&#10;            // Reset auto-scroll timer when user manually navigates&#10;            startAutoScroll();&#10;        });&#10;&#10;        binding.carouselNavRight.setOnClickListener(v -&gt; {&#10;            int currentItem = binding.animeCarouselViewpager.getCurrentItem();&#10;            int nextItem;&#10;&#10;            if (currentItem == carouselAnimeList.size() - 1) {&#10;                // Wrap to first item&#10;                nextItem = 0;&#10;            } else {&#10;                nextItem = currentItem + 1;&#10;            }&#10;&#10;            binding.animeCarouselViewpager.setCurrentItem(nextItem, true);&#10;&#10;            // Reset auto-scroll timer when user manually navigates&#10;            startAutoScroll();&#10;        });&#10;    }&#10;&#10;    private void setupMenuDropdown() {&#10;        binding.menuIcon.setOnClickListener(v -&gt; showDropdownMenu(v));&#10;    }&#10;&#10;    private void showDropdownMenu(View anchorView) {&#10;        // Inflate the dropdown menu layout&#10;        LayoutInflater inflater = LayoutInflater.from(getContext());&#10;        View dropdownView = inflater.inflate(R.layout.dropdown_menu, null);&#10;&#10;        // Create popup window&#10;        PopupWindow popupWindow = new PopupWindow(&#10;            dropdownView,&#10;            ViewGroup.LayoutParams.WRAP_CONTENT,&#10;            ViewGroup.LayoutParams.WRAP_CONTENT,&#10;            true&#10;        );&#10;&#10;        // Set up logout click listener&#10;        dropdownView.findViewById(R.id.menu_logout).setOnClickListener(v -&gt; {&#10;            popupWindow.dismiss();&#10;            logout();&#10;        });&#10;&#10;        // Set popup window properties&#10;        popupWindow.setOutsideTouchable(true);&#10;        popupWindow.setFocusable(true);&#10;&#10;        // Show popup below and to the right of the menu icon&#10;        int[] location = new int[2];&#10;        anchorView.getLocationOnScreen(location);&#10;        popupWindow.showAtLocation(anchorView,&#10;            android.view.Gravity.NO_GRAVITY,&#10;            location[0],&#10;            location[1] + anchorView.getHeight() + 8);&#10;    }&#10;&#10;    private void logout() {&#10;        // Stop any ongoing auto-scroll&#10;        stopAutoScroll();&#10;&#10;        // Create intent to go back to LoginActivity&#10;        Intent loginIntent = new Intent(getActivity(), LoginActivity.class);&#10;        loginIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(loginIntent);&#10;&#10;        // Finish the current activity&#10;        if (getActivity() != null) {&#10;            getActivity().finish();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        stopAutoScroll();&#10;        binding = null;&#10;    }&#10;&#10;    @Override&#10;    public void onPause() {&#10;        super.onPause();&#10;        stopAutoScroll();&#10;    }&#10;&#10;    @Override&#10;    public void onResume() {&#10;        super.onResume();&#10;        if (!isMangaTabSelected) {&#10;            startAutoScroll();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/utils/UserSession.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/ac/id/binus/labux/utils/UserSession.java" />
              <option name="updatedContent" value="package ac.id.binus.labux.utils;&#10;&#10;public class UserSession {&#10;    private static UserSession instance;&#10;    private String username;&#10;&#10;    private UserSession() {&#10;        // Private constructor to prevent instantiation&#10;    }&#10;&#10;    public static UserSession getInstance() {&#10;        if (instance == null) {&#10;            instance = new UserSession();&#10;        }&#10;        return instance;&#10;    }&#10;&#10;    public void setUsername(String username) {&#10;        this.username = username;&#10;    }&#10;&#10;    public String getUsername() {&#10;        return username;&#10;    }&#10;&#10;    public void clearSession() {&#10;        username = null;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/anime_dxd_logo.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/anime_dxd_logo.xml" />
              <option name="originalContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;120dp&quot;&#10;    android:height=&quot;120dp&quot;&#10;    android:viewportWidth=&quot;120&quot;&#10;    android:viewportHeight=&quot;120&quot;&gt;&#10;    &#10;    &lt;!-- Fox/Kitsune mask design --&gt;&#10;    &lt;group android:translateX=&quot;60&quot; android:translateY=&quot;60&quot;&gt;&#10;        &#10;        &lt;!-- Mask base --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/golden_yellow&quot;&#10;            android:pathData=&quot;M-30,-40 C-35,-45 -40,-40 -40,-30 L-40,30 C-40,40 -30,45 0,45 C30,45 40,40 40,30 L40,-30 C40,-40 35,-45 30,-40 L30,-35 C25,-45 15,-45 10,-35 L0,-30 L-10,-35 C-15,-45 -25,-45 -30,-35 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Eye markings --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;#B8860B&quot;&#10;            android:pathData=&quot;M-20,-20 C-25,-25 -15,-30 -10,-25 L-5,-20 C0,-15 -5,-10 -10,-15 L-15,-20 Z&quot; /&gt;&#10;        &#10;        &lt;path&#10;            android:fillColor=&quot;#B8860B&quot;&#10;            android:pathData=&quot;M20,-20 C25,-25 15,-30 10,-25 L5,-20 C0,-15 5,-10 10,-15 L15,-20 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Eyes --&gt;&#10;        &lt;circle&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:cx=&quot;-12&quot;&#10;            android:cy=&quot;-15&quot;&#10;            android:radius=&quot;3&quot; /&gt;&#10;            &#10;        &lt;circle&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:cx=&quot;12&quot;&#10;            android:cy=&quot;-15&quot;&#10;            android:radius=&quot;3&quot; /&gt;&#10;        &#10;        &lt;!-- Nose --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:pathData=&quot;M0,5 L-3,10 L3,10 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Mouth --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:strokeColor=&quot;@color/black&quot;&#10;            android:strokeWidth=&quot;2&quot;&#10;            android:pathData=&quot;M0,15 C-5,20 -10,15 -8,10 M0,15 C5,20 10,15 8,10&quot; /&gt;&#10;            &#10;    &lt;/group&gt;&#10;    &#10;&lt;/vector&gt;&#10;" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;120dp&quot;&#10;    android:height=&quot;120dp&quot;&#10;    android:viewportWidth=&quot;120&quot;&#10;    android:viewportHeight=&quot;120&quot;&gt;&#10;    &#10;    &lt;!-- Fox/Kitsune mask design --&gt;&#10;    &lt;group android:translateX=&quot;60&quot; android:translateY=&quot;60&quot;&gt;&#10;        &#10;        &lt;!-- Mask base --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/golden_yellow&quot;&#10;            android:pathData=&quot;M-30,-40 C-35,-45 -40,-40 -40,-30 L-40,30 C-40,40 -30,45 0,45 C30,45 40,40 40,30 L40,-30 C40,-40 35,-45 30,-40 L30,-35 C25,-45 15,-45 10,-35 L0,-30 L-10,-35 C-15,-45 -25,-45 -30,-35 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Eye markings --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;#B8860B&quot;&#10;            android:pathData=&quot;M-20,-20 C-25,-25 -15,-30 -10,-25 L-5,-20 C0,-15 -5,-10 -10,-15 L-15,-20 Z&quot; /&gt;&#10;        &#10;        &lt;path&#10;            android:fillColor=&quot;#B8860B&quot;&#10;            android:pathData=&quot;M20,-20 C25,-25 15,-30 10,-25 L5,-20 C0,-15 5,-10 10,-15 L15,-20 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Eyes --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:pathData=&quot;M-12,-15 C-12,-16.66 -10.66,-18 -9,-18 C-7.34,-18 -6,-16.66 -6,-15 C-6,-13.34 -7.34,-12 -9,-12 C-10.66,-12 -12,-13.34 -12,-15 Z&quot; /&gt;&#10;            &#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:pathData=&quot;M12,-15 C12,-16.66 13.34,-18 15,-18 C16.66,-18 18,-16.66 18,-15 C18,-13.34 16.66,-12 15,-12 C13.34,-12 12,-13.34 12,-15 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Nose --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:pathData=&quot;M0,5 L-3,10 L3,10 Z&quot; /&gt;&#10;        &#10;        &lt;!-- Mouth --&gt;&#10;        &lt;path&#10;            android:fillColor=&quot;@color/black&quot;&#10;            android:strokeColor=&quot;@color/black&quot;&#10;            android:strokeWidth=&quot;2&quot;&#10;            android:pathData=&quot;M0,15 C-5,20 -10,15 -8,10 M0,15 C5,20 10,15 8,10&quot; /&gt;&#10;            &#10;    &lt;/group&gt;&#10;    &#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/carousel_nav_button_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/carousel_nav_button_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;#80000000&quot; /&gt;&#10;    &lt;stroke &#10;        android:width=&quot;1dp&quot; &#10;        android:color=&quot;@color/golden_yellow&quot; /&gt;&#10;    &lt;size &#10;        android:width=&quot;40dp&quot; &#10;        android:height=&quot;40dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/dropdown_menu_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/dropdown_menu_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/background_dark&quot; /&gt;&#10;    &lt;stroke &#10;        android:width=&quot;1dp&quot;&#10;        android:color=&quot;@color/golden_yellow&quot; /&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/featured_anime.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/featured_anime.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;gradient&#10;        android:angle=&quot;45&quot;&#10;        android:startColor=&quot;#FF6B35&quot;&#10;        android:centerColor=&quot;#4A90E2&quot;&#10;        android:endColor=&quot;#7B68EE&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/gradient_overlay.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/gradient_overlay.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;gradient&#10;        android:angle=&quot;270&quot;&#10;        android:startColor=&quot;#00000000&quot;&#10;        android:centerColor=&quot;#40000000&quot;&#10;        android:endColor=&quot;#80000000&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_about_nav.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_about_nav.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_chevron_left.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_chevron_left.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/golden_yellow&quot;&#10;        android:pathData=&quot;M15.41,16.59L10.83,12l4.58,-4.59L14,6l-6,6 6,6 1.41,-1.41z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_chevron_right.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_chevron_right.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/golden_yellow&quot;&#10;        android:pathData=&quot;M8.59,16.59L13.17,12 8.59,7.41 10,6l6,6 -6,6 -1.41,-1.41z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_home_nav.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_home_nav.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_list_nav.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_list_nav.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M3,13h2v-2L3,11v2zM3,17h2v-2L3,15v2zM3,9h2L5,7L3,7v2zM7,13h14v-2L7,11v2zM7,17h14v-2L7,15v2zM7,7v2h14L21,7L7,7z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_logout.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_logout.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/golden_yellow&quot;&#10;        android:pathData=&quot;M17,7l-1.41,1.41L18.17,11H8v2h10.17l-2.58,2.59L17,17l5,-5zM4,5h8V3H4C2.9,3 2,3.9 2,5v14c0,1.1 0.9,2 2,2h8v-2H4V5z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/text_primary&quot;&#10;        android:pathData=&quot;M3,6h18v2H3V6zM3,11h18v2H3V11zM3,16h18v2H3V16z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_visibility.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_visibility.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/gray_light&quot;&#10;        android:pathData=&quot;M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/indicator_active.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/indicator_active.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/golden_yellow&quot; /&gt;&#10;    &lt;size android:width=&quot;8dp&quot; android:height=&quot;8dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/indicator_inactive.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/indicator_inactive.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/text_secondary&quot; /&gt;&#10;    &lt;size android:width=&quot;8dp&quot; android:height=&quot;8dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/rounded_corners.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/rounded_corners.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/card_background&quot; /&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/status_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/status_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/golden_yellow&quot; /&gt;&#10;    &lt;corners android:radius=&quot;4dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/tab_selected.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/tab_selected.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/text_primary&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/tab_selected_yellow.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/tab_selected_yellow.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/tab_selected_yellow&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/toggle_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/toggle_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/button_toggle&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/font/poppins.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/font/poppins.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;font-family xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;100&quot;&#10;        android:font=&quot;@font/poppins_thin&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;200&quot;&#10;        android:font=&quot;@font/poppins_extralight&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;300&quot;&#10;        android:font=&quot;@font/poppins_light&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;400&quot;&#10;        android:font=&quot;@font/poppins_regular&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;500&quot;&#10;        android:font=&quot;@font/poppins_medium&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;600&quot;&#10;        android:font=&quot;@font/poppins_semibold&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;700&quot;&#10;        android:font=&quot;@font/poppins_bold&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;800&quot;&#10;        android:font=&quot;@font/poppins_extrabold&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;900&quot;&#10;        android:font=&quot;@font/poppins_black&quot; /&gt;&#10;&lt;/font-family&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;font-family xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;100&quot;&#10;        android:font=&quot;@font/poppins_thin&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;300&quot;&#10;        android:font=&quot;@font/poppins_light&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;400&quot;&#10;        android:font=&quot;@font/poppins_regular&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;500&quot;&#10;        android:font=&quot;@font/poppins_medium&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;600&quot;&#10;        android:font=&quot;@font/poppins_semibold&quot; /&gt;&#10;    &lt;font&#10;        android:fontStyle=&quot;normal&quot;&#10;        android:fontWeight=&quot;700&quot;&#10;        android:font=&quot;@font/poppins_bold&quot; /&gt;&#10;&lt;/font-family&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/login_background&quot;&#10;    android:fitsSystemWindows=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Gojo image on the right - big --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/iv_gojo&quot;&#10;        android:layout_width=&quot;220dp&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_alignParentEnd=&quot;true&quot;&#10;        android:layout_alignParentTop=&quot;true&quot;&#10;        android:layout_marginBottom=&quot;-120dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/gojo&quot;&#10;        android:alpha=&quot;0.7&quot;&#10;        android:contentDescription=&quot;Gojo background&quot; /&gt;&#10;&#10;    &lt;!-- Sukuna image on bottom left - smaller --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/iv_sukuna&quot;&#10;        android:layout_width=&quot;180dp&quot;&#10;        android:layout_height=&quot;220dp&quot;&#10;        android:layout_alignParentStart=&quot;true&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_marginBottom=&quot;0dp&quot;&#10;        android:alpha=&quot;0.7&quot;&#10;        android:contentDescription=&quot;Sukuna background&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/sukuna&quot; /&gt;&#10;&#10;    &lt;!-- Dark overlay for better text readability --&gt;&#10;    &lt;View&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;@color/dark_overlay&quot; /&gt;&#10;&#10;    &lt;!-- Main content container --&gt;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:fillViewport=&quot;true&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;32dp&quot;&gt;&#10;&#10;            &lt;!-- Logo and App Name --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/iv_logo&quot;&#10;                android:layout_width=&quot;126dp&quot;&#10;                android:layout_height=&quot;126dp&quot;&#10;                android:layout_marginTop=&quot;50dp&quot;&#10;                android:layout_marginBottom=&quot;36dp&quot;&#10;                android:src=&quot;@drawable/anime_dxd_logo&quot; /&gt;&#10;&#10;            &lt;!-- Login Form Section --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_login_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;0dp&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:text=&quot;LOGIN WITH YOUR ACCOUNT&quot;&#10;                android:textAlignment=&quot;textStart&quot;&#10;                android:textColor=&quot;@color/golden_yellow&quot;&#10;                android:textSize=&quot;15sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;!-- Username Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                style=&quot;@style/CustomTextInputLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_username&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:fontFamily=&quot;@font/poppins&quot;&#10;                    android:hint=&quot;Username&quot;&#10;                    android:background=&quot;@drawable/bg_input&quot;&#10;                    android:inputType=&quot;text&quot;&#10;                    android:maxLines=&quot;1&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textColorHint=&quot;@color/gray_light&quot;&#10;                    android:textAlignment=&quot;textStart&quot;&#10;                    android:gravity=&quot;start&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Password Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                style=&quot;@style/CustomTextInputLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:endIconMode=&quot;password_toggle&quot;&#10;                app:endIconTint=&quot;@color/gray_light&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_password&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:background=&quot;@drawable/bg_input&quot;&#10;                    android:gravity=&quot;start&quot;&#10;                    android:hint=&quot;Password&quot;&#10;                    android:inputType=&quot;textPassword&quot;&#10;                    android:maxLines=&quot;1&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:textAlignment=&quot;textStart&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textColorHint=&quot;@color/gray_light&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Forgot Password --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_forgot_password&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;start&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;&#10;                android:background=&quot;?android:attr/selectableItemBackground&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:text=&quot;FORGOT YOUR PASSWORD&quot;&#10;                android:textColor=&quot;@color/gray_light&quot;&#10;                android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;            &lt;!-- Login Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_login&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;&#10;                android:background=&quot;@drawable/login_button_glow&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:letterSpacing=&quot;0.05&quot;&#10;                android:text=&quot;LOGIN NOW&quot;&#10;                android:textColor=&quot;@color/black&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:elevation=&quot;8dp&quot;&#10;                /&gt;&#10;&#10;            &lt;!-- Social Login Section --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:paddingHorizontal=&quot;60dp&quot;&gt;&#10;&#10;                &lt;!-- Left horizontal line --&gt;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginEnd=&quot;16dp&quot;&#10;                    android:background=&quot;@color/gray_light&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:fontFamily=&quot;@font/go3v2&quot;&#10;                    android:text=&quot;LOGIN WITH&quot;&#10;                    android:textColor=&quot;@color/gray_light&quot;&#10;                    android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;                &lt;!-- Right horizontal line --&gt;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&#10;                    android:background=&quot;@color/gray_light&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Social Login Buttons --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;110dp&quot;&gt;&#10;&#10;                &lt;!-- Google Login --&gt;&#10;                &lt;FrameLayout&#10;                    android:id=&quot;@+id/btn_google_login&quot;&#10;                    android:layout_width=&quot;60dp&quot;&#10;                    android:layout_height=&quot;60dp&quot;&#10;                    android:layout_margin=&quot;8dp&quot;&#10;                    android:background=&quot;@drawable/social_button_background&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;32dp&quot;&#10;                        android:layout_height=&quot;32dp&quot;&#10;                        android:layout_gravity=&quot;center&quot;&#10;                        android:src=&quot;@drawable/ic_google&quot; /&gt;&#10;&#10;                &lt;/FrameLayout&gt;&#10;&#10;                &lt;!-- Apple Login --&gt;&#10;                &lt;FrameLayout&#10;                    android:id=&quot;@+id/btn_apple_login&quot;&#10;                    android:layout_width=&quot;60dp&quot;&#10;                    android:layout_height=&quot;60dp&quot;&#10;                    android:layout_margin=&quot;8dp&quot;&#10;                    android:background=&quot;@drawable/social_button_background&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;32dp&quot;&#10;                        android:layout_height=&quot;32dp&quot;&#10;                        android:layout_gravity=&quot;center&quot;&#10;                        android:src=&quot;@drawable/ic_apple&quot; /&gt;&#10;&#10;                &lt;/FrameLayout&gt;&#10;&#10;                &lt;!-- Facebook Login --&gt;&#10;                &lt;FrameLayout&#10;                    android:id=&quot;@+id/btn_facebook_login&quot;&#10;                    android:layout_width=&quot;60dp&quot;&#10;                    android:layout_height=&quot;60dp&quot;&#10;                    android:layout_margin=&quot;8dp&quot;&#10;                    android:background=&quot;@drawable/social_button_background&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;32dp&quot;&#10;                        android:layout_height=&quot;32dp&quot;&#10;                        android:layout_gravity=&quot;center&quot;&#10;                        android:src=&quot;@drawable/ic_facebook&quot; /&gt;&#10;&#10;                &lt;/FrameLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;    &lt;!-- Forgot Password Overlay --&gt;&#10;    &lt;RelativeLayout&#10;        android:id=&quot;@+id/forgot_password_overlay&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;#CC000000&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:focusable=&quot;true&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;280dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_centerInParent=&quot;true&quot;&#10;            android:background=&quot;@drawable/overlay_background&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;24dp&quot;&gt;&#10;&#10;            &lt;!-- Close Button --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/btn_close_overlay&quot;&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:layout_gravity=&quot;end&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:src=&quot;@drawable/ic_close&quot;&#10;                android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:padding=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Message --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:text=&quot;Your password is password&quot;&#10;                android:textColor=&quot;@color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:textAlignment=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/RelativeLayout&gt;&#10;&#10;&lt;/RelativeLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/login_background&quot;&#10;    android:fitsSystemWindows=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Gojo image on the right - big --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/iv_gojo&quot;&#10;        android:layout_width=&quot;220dp&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_alignParentEnd=&quot;true&quot;&#10;        android:layout_alignParentTop=&quot;true&quot;&#10;        android:layout_marginBottom=&quot;-120dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/gojo&quot;&#10;        android:alpha=&quot;0.7&quot;&#10;        android:contentDescription=&quot;Gojo background&quot; /&gt;&#10;&#10;    &lt;!-- Sukuna image on bottom left - smaller --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/iv_sukuna&quot;&#10;        android:layout_width=&quot;180dp&quot;&#10;        android:layout_height=&quot;220dp&quot;&#10;        android:layout_alignParentStart=&quot;true&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_marginBottom=&quot;0dp&quot;&#10;        android:alpha=&quot;0.7&quot;&#10;        android:contentDescription=&quot;Sukuna background&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/sukuna&quot; /&gt;&#10;&#10;    &lt;!-- Dark overlay for better text readability --&gt;&#10;    &lt;View&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;@color/dark_overlay&quot; /&gt;&#10;&#10;    &lt;!-- Main content container --&gt;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:fillViewport=&quot;true&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;32dp&quot;&gt;&#10;&#10;            &lt;!-- Logo and App Name --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/iv_logo&quot;&#10;                android:layout_width=&quot;126dp&quot;&#10;                android:layout_height=&quot;126dp&quot;&#10;                android:layout_marginTop=&quot;50dp&quot;&#10;                android:layout_marginBottom=&quot;36dp&quot;&#10;                android:src=&quot;@drawable/anime_dxd_logo&quot; /&gt;&#10;&#10;            &lt;!-- Login Form Section --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_login_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:text=&quot;LOGIN WITH YOUR ACCOUNT&quot;&#10;                android:textAlignment=&quot;textStart&quot;&#10;                android:textColor=&quot;@color/golden_yellow&quot;&#10;                android:textSize=&quot;15sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;!-- Username Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                style=&quot;@style/CustomTextInputLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_username&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:fontFamily=&quot;@font/poppins&quot;&#10;                    android:hint=&quot;Username&quot;&#10;                    android:background=&quot;@drawable/bg_input&quot;&#10;                    android:inputType=&quot;text&quot;&#10;                    android:maxLines=&quot;1&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textColorHint=&quot;@color/gray_light&quot;&#10;                    android:textAlignment=&quot;textStart&quot;&#10;                    android:gravity=&quot;start&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Username Error Message --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_username_error&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:fontFamily=&quot;@font/poppins&quot;&#10;                android:textColor=&quot;@color/accent_orange&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                android:paddingStart=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Password Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                style=&quot;@style/CustomTextInputLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot;&#10;                app:endIconMode=&quot;password_toggle&quot;&#10;                app:endIconTint=&quot;@color/gray_light&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_password&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:background=&quot;@drawable/bg_input&quot;&#10;                    android:gravity=&quot;start&quot;&#10;                    android:hint=&quot;Password&quot;&#10;                    android:inputType=&quot;textPassword&quot;&#10;                    android:maxLines=&quot;1&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:textAlignment=&quot;textStart&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textColorHint=&quot;@color/gray_light&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Password Error Message --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_password_error&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;&#10;                android:fontFamily=&quot;@font/poppins&quot;&#10;                android:textColor=&quot;@color/accent_orange&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                android:paddingStart=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Login Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_login&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:layout_marginBottom=&quot;110dp&quot;&#10;                android:background=&quot;@drawable/login_button_glow&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:letterSpacing=&quot;0.05&quot;&#10;                android:text=&quot;LOGIN NOW&quot;&#10;                android:textColor=&quot;@color/black&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:elevation=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/RelativeLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/container&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:paddingTop=&quot;?attr/actionBarSize&quot;&gt;&#10;&#10;    &lt;com.google.android.material.bottomnavigation.BottomNavigationView&#10;        android:id=&quot;@+id/nav_view&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;0dp&quot;&#10;        android:layout_marginEnd=&quot;0dp&quot;&#10;        android:background=&quot;?android:attr/windowBackground&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:menu=&quot;@menu/bottom_nav_menu&quot; /&gt;&#10;&#10;    &lt;fragment&#10;        android:id=&quot;@+id/nav_host_fragment_activity_main&quot;&#10;        android:name=&quot;androidx.navigation.fragment.NavHostFragment&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:defaultNavHost=&quot;true&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@id/nav_view&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:navGraph=&quot;@navigation/mobile_navigation&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/container&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;    &lt;fragment&#10;        android:id=&quot;@+id/nav_host_fragment_activity_main&quot;&#10;        android:name=&quot;androidx.navigation.fragment.NavHostFragment&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:defaultNavHost=&quot;true&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@id/custom_bottom_nav&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:navGraph=&quot;@navigation/mobile_navigation&quot; /&gt;&#10;&#10;    &lt;!-- Custom Bottom Navigation --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/custom_bottom_nav&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;80dp&quot;&#10;        android:background=&quot;@color/background_dark&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:paddingVertical=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;!-- Home Button --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/nav_home_btn&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;&#10;            android:background=&quot;?android:attr/selectableItemBackground&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;28dp&quot;&#10;                android:layout_height=&quot;28dp&quot;&#10;                android:src=&quot;@drawable/ic_home_nav&quot;&#10;                app:tint=&quot;@color/golden_yellow&quot;&#10;                android:contentDescription=&quot;Home&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- List Button --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/nav_list_btn&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;&#10;            android:background=&quot;?android:attr/selectableItemBackground&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;28dp&quot;&#10;                android:layout_height=&quot;28dp&quot;&#10;                android:src=&quot;@drawable/ic_list_nav&quot;&#10;                app:tint=&quot;@color/text_secondary&quot;&#10;                android:contentDescription=&quot;List&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- About Button --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/nav_about_btn&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;&#10;            android:background=&quot;?android:attr/selectableItemBackground&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;28dp&quot;&#10;                android:layout_height=&quot;28dp&quot;&#10;                android:src=&quot;@drawable/ic_about_nav&quot;&#10;                app:tint=&quot;@color/text_secondary&quot;&#10;                android:contentDescription=&quot;About&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Hide the original BottomNavigationView --&gt;&#10;    &lt;com.google.android.material.bottomnavigation.BottomNavigationView&#10;        android:id=&quot;@+id/nav_view&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:menu=&quot;@menu/bottom_nav_menu&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/dropdown_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/dropdown_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;200dp&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:background=&quot;@drawable/dropdown_menu_bg&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;8dp&quot;&#10;    android:elevation=&quot;8dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/menu_logout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;LOGOUT&quot;&#10;        android:textColor=&quot;@color/text_primary&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:fontFamily=&quot;@font/go3v2&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:paddingStart=&quot;16dp&quot;&#10;        android:paddingEnd=&quot;16dp&quot;&#10;        android:background=&quot;?attr/selectableItemBackground&quot;&#10;        android:drawableStart=&quot;@drawable/ic_logout&quot;&#10;        android:drawablePadding=&quot;12dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_dark&quot;&#10;    tools:context=&quot;.ui.home.HomeFragment&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:paddingHorizontal=&quot;35px&quot;&#10;        android:paddingTop=&quot;50px&quot;&gt;&#10;&#10;        &lt;!-- Header Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;!-- Hamburger Menu Icon --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/menu_icon&quot;&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:src=&quot;@drawable/ic_menu&quot;&#10;                app:tint=&quot;@color/text_primary&quot;&#10;                android:contentDescription=&quot;@string/menu_description&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Welcome Section --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/welcome_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Welcome, admin&quot;&#10;            android:textSize=&quot;28sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/welcome_description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/welcome_description&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:fontFamily=&quot;@font/poppins&quot;&#10;            android:lineSpacingExtra=&quot;4dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- News/Manga Toggle --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:background=&quot;@drawable/toggle_background&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/news_tab&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;@string/news_tab&quot;&#10;                android:textColor=&quot;@color/background_dark&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:background=&quot;@drawable/tab_selected_yellow&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/manga_tab&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;@string/manga_tab&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Featured Content Section (Anime) / Manga Carousel (Manga) --&gt;&#10;        &lt;FrameLayout&#10;            android:id=&quot;@+id/featured_section&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;200dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;androidx.viewpager2.widget.ViewPager2&#10;                android:id=&quot;@+id/anime_carousel_viewpager&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;            &lt;!-- Carousel Indicators --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/carousel_indicators&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;bottom|center_horizontal&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:orientation=&quot;horizontal&quot; /&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;        &lt;!-- Manga Carousel (Hidden by default) --&gt;&#10;        &lt;include&#10;            android:id=&quot;@+id/manga_carousel&quot;&#10;            layout=&quot;@layout/manga_carousel&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;!-- Weekly Top 3 Section (Anime only) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/weekly_top_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/weekly_top_3&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/weekly_top_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;32dp&quot;&#10;            tools:listitem=&quot;@layout/item_weekly_top&quot; /&gt;&#10;&#10;        &lt;!-- Section 1 Title (Dynamic: Recent News / Popular Manga Updates) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/section1_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/recent_news&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/section1_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;200dp&quot;&#10;            android:layout_marginBottom=&quot;32dp&quot;&#10;            android:nestedScrollingEnabled=&quot;true&quot;&#10;            tools:listitem=&quot;@layout/item_recent_news&quot; /&gt;&#10;&#10;        &lt;!-- Section 2 Title (Dynamic: Latest Review / Latest Manga Releases) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/section2_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/latest_review&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/section2_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            tools:listitem=&quot;@layout/item_latest_review&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_dark&quot;&#10;    tools:context=&quot;.ui.home.HomeFragment&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:paddingHorizontal=&quot;35px&quot;&#10;        android:paddingTop=&quot;50px&quot;&gt;&#10;&#10;        &lt;!-- Header Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;!-- Hamburger Menu Icon --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/menu_icon&quot;&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:src=&quot;@drawable/ic_menu&quot;&#10;                app:tint=&quot;@color/text_primary&quot;&#10;                android:contentDescription=&quot;@string/menu_description&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Welcome Section --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/welcome_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Welcome, admin&quot;&#10;            android:textSize=&quot;28sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/welcome_description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/welcome_description&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:fontFamily=&quot;@font/poppins&quot;&#10;            android:lineSpacingExtra=&quot;4dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- News/Manga Toggle --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:background=&quot;@drawable/toggle_background&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/news_tab&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;@string/news_tab&quot;&#10;                android:textColor=&quot;@color/background_dark&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:background=&quot;@drawable/tab_selected_yellow&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/manga_tab&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;@string/manga_tab&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Featured Content Section (Anime) / Manga Carousel (Manga) --&gt;&#10;        &lt;FrameLayout&#10;            android:id=&quot;@+id/featured_section&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;200dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;            &lt;androidx.viewpager2.widget.ViewPager2&#10;                android:id=&quot;@+id/anime_carousel_viewpager&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;            &lt;!-- Left Navigation Button --&gt;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/carousel_nav_left&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:layout_gravity=&quot;center_vertical|start&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:background=&quot;@drawable/carousel_nav_button_bg&quot;&#10;                android:src=&quot;@drawable/ic_chevron_left&quot;&#10;                android:contentDescription=&quot;Previous slide&quot;&#10;                android:elevation=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Right Navigation Button --&gt;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/carousel_nav_right&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:layout_gravity=&quot;center_vertical|end&quot;&#10;                android:layout_marginEnd=&quot;16dp&quot;&#10;                android:background=&quot;@drawable/carousel_nav_button_bg&quot;&#10;                android:src=&quot;@drawable/ic_chevron_right&quot;&#10;                android:contentDescription=&quot;Next slide&quot;&#10;                android:elevation=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Carousel Indicators --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/carousel_indicators&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;bottom|center_horizontal&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:orientation=&quot;horizontal&quot; /&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;        &lt;!-- Manga Carousel (Hidden by default) --&gt;&#10;        &lt;include&#10;            android:id=&quot;@+id/manga_carousel&quot;&#10;            layout=&quot;@layout/manga_carousel&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;!-- Weekly Top 3 Section (Anime only) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/weekly_top_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/weekly_top_3&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/weekly_top_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;32dp&quot;&#10;            tools:listitem=&quot;@layout/item_weekly_top&quot; /&gt;&#10;&#10;        &lt;!-- Section 1 Title (Dynamic: Recent News / Popular Manga Updates) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/section1_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/recent_news&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/section1_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;200dp&quot;&#10;            android:layout_marginBottom=&quot;32dp&quot;&#10;            android:nestedScrollingEnabled=&quot;true&quot;&#10;            tools:listitem=&quot;@layout/item_recent_news&quot; /&gt;&#10;&#10;        &lt;!-- Section 2 Title (Dynamic: Latest Review / Latest Manga Releases) --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/section2_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/latest_review&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/section2_recyclerview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            tools:listitem=&quot;@layout/item_latest_review&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_anime_carousel.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_anime_carousel.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    app:cardCornerRadius=&quot;12dp&quot;&#10;    app:cardElevation=&quot;0dp&quot;&gt;&#10;&#10;    &lt;FrameLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/carousel_image&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:scaleType=&quot;centerCrop&quot;&#10;            android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:background=&quot;@drawable/gradient_overlay&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;bottom&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/carousel_genre&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ACTION&quot;&#10;                android:textColor=&quot;@color/accent_orange&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/carousel_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Attack on Titan&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;The story of humanity's last stand against the titans continues...&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_manga_release.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_manga_release.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;horizontal&quot;&#10;    android:padding=&quot;16dp&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;    &lt;!-- Left side: Manga image --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/manga_image&quot;&#10;        android:layout_width=&quot;120dp&quot;&#10;        android:layout_height=&quot;160dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;    &lt;!-- Right side: Manga content --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;160dp&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/manga_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Attack On Titan&quot;&#10;            android:textColor=&quot;@color/golden_yellow&quot;&#10;            android:textSize=&quot;20sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:fontFamily=&quot;@font/go3v2&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;In a world where memories can be bought and sold, Eiji wakes up with no past—only a haunting image of a city in flames. As he searches for the truth, he uncovers a memory-altering AI and begins to question whether his identity is even real.&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:fontFamily=&quot;@font/poppins&quot;&#10;            android:lineSpacingExtra=&quot;2dp&quot;&#10;            android:ellipsize=&quot;end&quot;&#10;            android:maxLines=&quot;6&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/chapter&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Chapter 110 - Hells of Tokyo&quot;&#10;            android:textColor=&quot;@color/golden_yellow&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:fontFamily=&quot;@font/poppins&quot;&#10;            android:layout_gravity=&quot;bottom&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_manga_update.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_manga_update.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;120dp&quot;&#10;    android:layout_height=&quot;160dp&quot;&#10;    android:layout_marginEnd=&quot;12dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&#10;    app:cardBackgroundColor=&quot;@color/card_background&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/manga_image&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;100dp&quot;&#10;            android:scaleType=&quot;centerCrop&quot;&#10;            android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/manga_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tensei Shitara Slime Datta&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;10sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:fontFamily=&quot;@font/poppins&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/update_date&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Dec 7, 2024&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:textSize=&quot;8sp&quot;&#10;                android:fontFamily=&quot;@font/poppins&quot;&#10;                android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/status&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Ch.159&quot;&#10;                android:textColor=&quot;@color/golden_yellow&quot;&#10;                android:textSize=&quot;8sp&quot;&#10;                android:fontFamily=&quot;@font/poppins&quot;&#10;                android:background=&quot;@drawable/status_background&quot;&#10;                android:padding=&quot;2dp&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_recent_news.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_recent_news.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;horizontal&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/news_image&quot;&#10;        android:layout_width=&quot;60dp&quot;&#10;        android:layout_height=&quot;60dp&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:src=&quot;@drawable/featured_anime&quot;&#10;        android:background=&quot;@drawable/rounded_corners&quot; /&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_marginStart=&quot;12dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/news_date&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Posted on May 30, 2025&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/news_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Attack On Titan&quot;&#10;            android:textColor=&quot;@color/accent_orange&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/news_description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;In a world where humanity is on the brink of extinction due to giant humanoid creatures known as Titans...&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:maxLines=&quot;2&quot;&#10;            android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_weekly_top.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_weekly_top.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;120dp&quot;&#10;    android:layout_height=&quot;160dp&quot;&#10;    android:layout_marginEnd=&quot;12dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&#10;    app:cardBackgroundColor=&quot;@color/card_background&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/anime_image&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;100dp&quot;&#10;            android:scaleType=&quot;centerCrop&quot;&#10;            android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/anime_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Haikyuu!!&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/anime_genre&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ACTION&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:textSize=&quot;10sp&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/manga_carousel.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/manga_carousel.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;horizontal&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;    &lt;!-- Hot Manga 2025 --&gt;&#10;    &lt;androidx.cardview.widget.CardView&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;150dp&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:layout_marginEnd=&quot;8dp&quot;&#10;        app:cardCornerRadius=&quot;12dp&quot;&#10;        app:cardElevation=&quot;0dp&quot;&gt;&#10;&#10;        &lt;FrameLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/hot_manga_image&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:background=&quot;@drawable/gradient_overlay&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;bottom&quot;&#10;                android:text=&quot;HOT MANGA 2025&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:padding=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;    &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;!-- Top 10 Anime Guys With Handsome Looks --&gt;&#10;    &lt;androidx.cardview.widget.CardView&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;150dp&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:layout_marginStart=&quot;8dp&quot;&#10;        app:cardCornerRadius=&quot;12dp&quot;&#10;        app:cardElevation=&quot;0dp&quot;&gt;&#10;&#10;        &lt;FrameLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/top_guys_image&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:src=&quot;@drawable/featured_anime&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:background=&quot;@drawable/gradient_overlay&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;bottom&quot;&#10;                android:text=&quot;TOP 10 ANIME GUYS WITH HANDSOME LOOKS&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:fontFamily=&quot;@font/go3v2&quot;&#10;                android:padding=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;    &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/colors.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/colors.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;purple_200&quot;&gt;#FFBB86FC&lt;/color&gt;&#10;    &lt;color name=&quot;purple_500&quot;&gt;#FF6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;purple_700&quot;&gt;#FF3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;teal_200&quot;&gt;#FF03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;teal_700&quot;&gt;#FF018786&lt;/color&gt;&#10;    &lt;color name=&quot;black&quot;&gt;#FF000000&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFFFF&lt;/color&gt;&#10;    &#10;    &lt;!-- AnimeDxD Login Theme Colors --&gt;&#10;    &lt;color name=&quot;golden_yellow&quot;&gt;#FFD700&lt;/color&gt;&#10;    &lt;color name=&quot;dark_overlay&quot;&gt;#80000000&lt;/color&gt;&#10;    &lt;color name=&quot;gray_light&quot;&gt;#CCCCCC&lt;/color&gt;&#10;    &lt;color name=&quot;gray_dark&quot;&gt;#333333&lt;/color&gt;&#10;    &lt;color name=&quot;input_background&quot;&gt;#40FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;social_button_bg&quot;&gt;#2A2A2A&lt;/color&gt;&#10;&#10;    &lt;!-- Home Page Colors --&gt;&#10;    &lt;color name=&quot;background_dark&quot;&gt;#1A1A1A&lt;/color&gt;&#10;    &lt;color name=&quot;card_background&quot;&gt;#2A2A2A&lt;/color&gt;&#10;    &lt;color name=&quot;text_primary&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;text_secondary&quot;&gt;#CCCCCC&lt;/color&gt;&#10;    &lt;color name=&quot;accent_orange&quot;&gt;#FF6B35&lt;/color&gt;&#10;    &lt;color name=&quot;button_toggle&quot;&gt;#666666&lt;/color&gt;&#10;    &lt;color name=&quot;section_header&quot;&gt;#FFD700&lt;/color&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;purple_200&quot;&gt;#FFBB86FC&lt;/color&gt;&#10;    &lt;color name=&quot;purple_500&quot;&gt;#FF6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;purple_700&quot;&gt;#FF3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;teal_200&quot;&gt;#FF03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;teal_700&quot;&gt;#FF018786&lt;/color&gt;&#10;    &lt;color name=&quot;black&quot;&gt;#FF000000&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFFFF&lt;/color&gt;&#10;    &#10;    &lt;!-- AnimeDxD Login Theme Colors --&gt;&#10;    &lt;color name=&quot;golden_yellow&quot;&gt;#FFD700&lt;/color&gt;&#10;    &lt;color name=&quot;dark_overlay&quot;&gt;#80000000&lt;/color&gt;&#10;    &lt;color name=&quot;gray_light&quot;&gt;#CCCCCC&lt;/color&gt;&#10;    &lt;color name=&quot;gray_dark&quot;&gt;#333333&lt;/color&gt;&#10;    &lt;color name=&quot;input_background&quot;&gt;#40FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;social_button_bg&quot;&gt;#2A2A2A&lt;/color&gt;&#10;&#10;    &lt;!-- Home Page Colors --&gt;&#10;    &lt;color name=&quot;background_dark&quot;&gt;#1A1A1A&lt;/color&gt;&#10;    &lt;color name=&quot;card_background&quot;&gt;#2A2A2A&lt;/color&gt;&#10;    &lt;color name=&quot;text_primary&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;text_secondary&quot;&gt;#CCCCCC&lt;/color&gt;&#10;    &lt;color name=&quot;accent_orange&quot;&gt;#FF6B35&lt;/color&gt;&#10;    &lt;color name=&quot;button_toggle&quot;&gt;#666666&lt;/color&gt;&#10;    &lt;color name=&quot;section_header&quot;&gt;#FFD700&lt;/color&gt;&#10;    &lt;color name=&quot;tab_selected_yellow&quot;&gt;#F9CB55&lt;/color&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>